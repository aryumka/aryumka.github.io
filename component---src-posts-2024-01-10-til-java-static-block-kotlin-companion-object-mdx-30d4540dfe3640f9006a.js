"use strict";(self.webpackChunkaryumka_me=self.webpackChunkaryumka_me||[]).push([[4503,4164,4646,1482,7824,6638,3284,8995,4926],{2637:function(n,s,a){a.r(s);var t=a(9128),p=a(9474);function o(n){const s=Object.assign({p:"p",span:"span"},(0,t.R)(),n.components);return p.createElement(p.Fragment,null,p.createElement(s.p,null,"RestTemplate의 코드를 보던 중 아래와 같은 문법을 발견했다."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="java"><pre class="language-java"><code class="language-java">\t<span class="token keyword">static</span> <span class="token punctuation">{</span>\n\t\t<span class="token class-name">ClassLoader</span> classLoader <span class="token operator">=</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tromePresent <span class="token operator">=</span> <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token string">"com.rometools.rome.feed.WireFeed"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tjaxb2Present <span class="token operator">=</span> <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token string">"javax.xml.bind.Binder"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tjackson2Present <span class="token operator">=</span> <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token string">"com.fasterxml.jackson.databind.ObjectMapper"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>\n\t\t\t\t<span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token string">"com.fasterxml.jackson.core.JsonGenerator"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tjackson2XmlPresent <span class="token operator">=</span> <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token string">"com.fasterxml.jackson.dataformat.xml.XmlMapper"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tjackson2SmilePresent <span class="token operator">=</span> <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token string">"com.fasterxml.jackson.dataformat.smile.SmileFactory"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tjackson2CborPresent <span class="token operator">=</span> <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token string">"com.fasterxml.jackson.dataformat.cbor.CBORFactory"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tgsonPresent <span class="token operator">=</span> <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token string">"com.google.gson.Gson"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tjsonbPresent <span class="token operator">=</span> <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token string">"javax.json.bind.Jsonb"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tkotlinSerializationJsonPresent <span class="token operator">=</span> <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token string">"kotlinx.serialization.json.Json"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"코틀린의 companion object와 비슷하게 동작할 것처럼 보여서 찾아봤다."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="kotlin"><pre class="language-kotlin"><code class="language-kotlin"><span class="token comment">//kotlin의 companion object 예시</span>\n<span class="token keyword">class</span> MyClass <span class="token punctuation">{</span>\n    <span class="token keyword">companion</span> <span class="token keyword">object</span> <span class="token punctuation">{</span>\n        <span class="token keyword">init</span> <span class="token punctuation">{</span>\n            <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"Inside Kotlin companion object init block"</span></span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">fun</span> <span class="token function">someFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"Inside Kotlin companion object function"</span></span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"그러나 실제 작동방식은 다르다고 한다.\nkotlin의 companion object는 말그대로 객체이며 이는static class로 컴파일된다.\n그러나 java의 static 블록은 바로 바이트코드로 변환된다고 한다."),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="java"><pre class="language-java"><code class="language-java"><span class="token comment">//static 블록이 변환된 바이트코드 예시</span>\n<span class="token keyword">static</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token class-name">Code</span><span class="token operator">:</span>\n       <span class="token number">0</span><span class="token operator">:</span> ldc           #<span class="token number">2</span>    <span class="token comment">// String Inside Java static block</span>\n       <span class="token number">2</span><span class="token operator">:</span> invokestatic  #<span class="token number">3</span>    <span class="token comment">// Method java/lang/System.out.println:(Ljava/lang/String;)V</span>\n       <span class="token number">5</span><span class="token operator">:</span> <span class="token keyword">return</span></code></pre></div>'}}))}s.default=function(n){void 0===n&&(n={});const{wrapper:s}=Object.assign({},(0,t.R)(),n.components);return s?p.createElement(s,n,p.createElement(o,n)):o(n)}},9128:function(n,s,a){a.d(s,{R:function(){return e}});var t=a(9474);const p={},o=t.createContext(p);function e(n){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(s):{...s,...n}}),[s,n])}}}]);
//# sourceMappingURL=component---src-posts-2024-01-10-til-java-static-block-kotlin-companion-object-mdx-30d4540dfe3640f9006a.js.map
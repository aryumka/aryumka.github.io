{"componentChunkName":"component---src-templates-post-tsx-content-file-path-src-posts-2023-12-31-holiday-til-3-mdx","path":"/posts/holiday-til-3/","result":{"data":{"site":{"siteMetadata":{"title":"aryumka.me | devlog"}},"mdx":{"body":"\n3일차에 공부하다보니 다음과 같은 고민을 하게됐다.\n\n> JPA에서 @Transactional을 무조건 붙여야할까?\n> Kotlin에서 JpaRepository를 쓸 때 Optional을 안쓰는 법이 있을까?\n\n그리고 생각보다 시간을 많이 잡아먹었던 문제가 있었다.\n\n> WebMvc 테스트가 안됐던 이유\n\n위 내용들에 대해 정리해보았다.\n\n## 1. JPA에서 @Transactional을 무조건 붙여야할까?\n습관적으로 서비스에서 `@Transactional`을 붙였었다. 하지만 레포지토리에 저장하는 등 하나만 실행을 한다면 과연 저 애너테이션이 필요할까?\n결론적으로는 필요없다.\n명시적으로 트랜잭션 경계를 구분해야할 필요성이 있을 때, 트랜잭션 격리수준, 예외 등을 설정할 때 등에 사용하면 된다. \n\n## 2. Kotlin에서 JpaRepository를 쓸 때 Optional 안쓰는 법\n![](https://velog.velcdn.com/images/aryumka/post/0c169fc0-5d98-4cd2-9d50-04672ebc9d84/image.png)\n\n```kotlin\n    fun getFundingProposalByIdOrNull(id: Long): FundingProposal? =\n        repository.findByIdOrNull(id) ?: throw EmptyResultDataAccessException(1)\n```\n이미 nullable을 리턴하는 메서드들이 다 있다!\n\n\n## 3. WebMvc 테스트가 안됐던 이유\n\n이전에 작성했던 kotest+mockk 코드가 작동하지 않았던 이유를 찾았다.\n```kotlin\n@WebMvcTest(ProposeController::class)\n@AutoConfigureMockMvc\nclass ProposeUpdateTest(@Autowired val mockMvc: MockMvc) : FunSpec() {\n    @MockkBean\n    private lateinit var service: ProposeService\n\n    init {\n        beforeTest {\n            service = mockk()\n            every { service.createFundingProposal(any()) } returns FundingProposal(1L, \"제안서 제목\")\n            every { service.updateFundingProposal(any(), any()) } returns FundingProposal(1L, \"새로운 제안서 제목\")\n        ...\n        }\n}\n```\n이유는 mockk 라이브러리의 문제가 아니라 kotest에서 스프링 의존성을 주입하는 방법을 몰랐었기 때문이다. \n1. 클래스 바디의 init 블록 안에 Springextension을 넣어주거나\n```kotlin\n@WebMvcTest(ProposeController::class)\n@AutoConfigureMockMvc\nclass ProposeUpdateTest2(@Autowired val mockMvc: MockMvc) : FunSpec() {\n    override fun extensions() = listOf(SpringExtension) //이렇게\n\n    @MockkBean\n    private lateinit var service: ProposeService\n\t...\n```\n2. 클래스 바디에 테스트 함수를 작성하지 말고 상속받는 Spec의 인자로 넣어준다.\n```kotlin\n@WebMvcTest(ProposeController::class)\n@AutoConfigureMockMvc\nclass ProposeUpdateTest2(\n    val mockMvc: MockMvc,\n    @MockkBean private var service: ProposeService\n) : FunSpec({\n//테스트할 내용\n...\n```\n","tableOfContents":{"items":[{"url":"#1-jpa에서-transactional을-무조건-붙여야할까","title":"1. JPA에서 @Transactional을 무조건 붙여야할까?"},{"url":"#2-kotlin에서-jparepository를-쓸-때-optional-안쓰는-법","title":"2. Kotlin에서 JpaRepository를 쓸 때 Optional 안쓰는 법"},{"url":"#3-webmvc-테스트가-안됐던-이유","title":"3. WebMvc 테스트가 안됐던 이유"}]},"excerpt":"3일차에 공부하다보니 다음과 같은 고민을 하게됐다. JPA에서 @Transactional을 무조건 붙여야할까? Kotlin에서 JpaRepository를 쓸 때 Optional을 안쓰는 법이 있을까?\n\n그리고 생각보다 시간을 많이 잡아먹었던 문제가…","fields":{"slug":"/posts/holiday-til-3","date":"2023-12-31"},"frontmatter":{"title":"[연휴개발TIL] DAY3","categories":"dev","tags":["TIL","JPA","Test","Transaction"],"image":"https://velog.velcdn.com/images/aryumka/post/0c169fc0-5d98-4cd2-9d50-04672ebc9d84/image.png","comments":true,"draft":false}},"allMdx":{"edges":[{"node":{"fields":{"date":"2023-03-18","slug":"/posts/spring-boot-tomcat"},"frontmatter":{"title":"스프링부트의 톰캣 실행","image":"https://velog.velcdn.com/images/aryumka/post/5b95b704-67df-48b2-bdde-620b629f10ae/image.png"}}},{"node":{"fields":{"date":"2023-04-10","slug":"/posts/jsoup-html-parser"},"frontmatter":{"title":"Jsoup을 이용하여 HTML Parser 만들기","image":"https://velog.velcdn.com/images/aryumka/post/251571e0-9d24-4ef3-aa0d-f4d8654212c3/image.png"}}},{"node":{"fields":{"date":"2023-12-24","slug":"/posts/properties-vs-yaml"},"frontmatter":{"title":"Properties vs YAML - 스프링부트 외부설정","image":"https://velog.velcdn.com/images/aryumka/post/9173f985-e7b4-4d03-9996-93a08c517845/image.png"}}},{"node":{"fields":{"date":"2023-12-25","slug":"/posts/mysql-date-type"},"frontmatter":{"title":"MySQL date 타입에 대하여: varchar(8)과의 비교를 중점으로","image":"https://velog.velcdn.com/images/aryumka/post/e84fde44-1e6e-436e-bf62-6749c6ca1845/image.png"}}},{"node":{"fields":{"date":"2023-12-29","slug":"/posts/holiday-til-2"},"frontmatter":{"title":"[연휴개발TIL] DAY2 - Github Action + Mockk","image":"https://velog.velcdn.com/images/aryumka/post/6e45e3ee-1592-433f-a0e8-e69b23738caf/image.png"}}},{"node":{"fields":{"date":"2023-12-28","slug":"/posts/holiday-til-1"},"frontmatter":{"title":"[연휴개발TIL] DAY1 - kotiln + kotest + Spring Data JPA","image":"https://velog.velcdn.com/images/aryumka/post/9173f985-e7b4-4d03-9996-93a08c517845/image.png"}}},{"node":{"fields":{"date":"2023-12-31","slug":"/posts/holiday-til-3"},"frontmatter":{"title":"[연휴개발TIL] DAY3","image":"https://velog.velcdn.com/images/aryumka/post/0c169fc0-5d98-4cd2-9d50-04672ebc9d84/image.png"}}},{"node":{"fields":{"date":"2024-01-02","slug":"/posts/holiday-til-4"},"frontmatter":{"title":"[연휴개발TIL] DAY3","image":"https://velog.velcdn.com/images/aryumka/post/3e146a87-d66d-4ff3-953f-9da5e5c92441/image.png"}}},{"node":{"fields":{"date":"2024-01-03","slug":"/posts/github-actions"},"frontmatter":{"title":"GitHub Actions 정리","image":"https://velog.velcdn.com/images/aryumka/post/07ec2107-424c-4a8c-9c11-005508653ee2/image.png"}}},{"node":{"fields":{"date":"2024-01-04","slug":"/posts/til-aws-elastic-ip-docker"},"frontmatter":{"title":"[TIL] aws 탄력적 ip + Docker 사용해보기","image":"/images/og.png"}}},{"node":{"fields":{"date":"2024-01-07","slug":"/posts/til-practice-tdd"},"frontmatter":{"title":"[TIL] README, 테스트 작성과 코드 구현","image":"/images/og.png"}}},{"node":{"fields":{"date":"2024-01-09","slug":"/posts/til-kotlin-binary"},"frontmatter":{"title":"[TIL] 코틀린 이진수 변환","image":"/images/og.png"}}},{"node":{"fields":{"date":"2024-01-10","slug":"/posts/til-java-static-block-kotlin-companion-object"},"frontmatter":{"title":"[TIL] Java의 static block vs Kotlin의 companion object","image":"/images/og.png"}}},{"node":{"fields":{"date":"2024-01-14","slug":"/posts/reinventing-big-integer"},"frontmatter":{"title":"[바퀴의 재발명] BigInteger","image":"/images/og.png"}}},{"node":{"fields":{"date":"2024-01-15","slug":"/posts/til-resource"},"frontmatter":{"title":"[TIL] 리소스 위치 참조 시 / 쓰지 않기","image":"/images/og.png"}}},{"node":{"fields":{"date":"2024-01-17","slug":"/posts/til-kotlin-inline-reflection"},"frontmatter":{"title":"[TIL] 코틀린 inline, reflection","image":"https://velog.velcdn.com/images/aryumka/post/14ac2014-f469-4a23-b3cd-d95c2e912efe/image.png"}}},{"node":{"fields":{"date":"2024-01-24","slug":"/posts/query-if-null-return"},"frontmatter":{"title":"[TIL] 쿼리로 피벗 시 if 함수에서 의도된 Null 리턴","image":"/images/og.png"}}},{"node":{"fields":{"date":"2024-01-25","slug":"/posts/kotlin-reflection"},"frontmatter":{"title":"[JVM 톺아보기] 코틀린의 리플렉션(Reflection)","image":"https://velog.velcdn.com/images/aryumka/post/c9d716a4-0eef-4663-90e1-69631029d564/image.png"}}},{"node":{"fields":{"date":"2024-02-01","slug":"/posts/jvm-permgen"},"frontmatter":{"title":"[JVM 톺아보기] JVM의 메서드 영역 (feat. PermGen space)","image":"/images/og.png"}}},{"node":{"fields":{"date":"2024-02-06","slug":"/posts/real-mysql"},"frontmatter":{"title":"[TIL] Real MySQL","image":"/images/og.png"}}},{"node":{"fields":{"date":"2024-03-02","slug":"/posts/til-kotlin-jpa-test"},"frontmatter":{"title":"[TIL] Kotlin + JPA + Kotest + H2 DB","image":"https://velog.velcdn.com/images/aryumka/post/af776ead-b672-4d57-80bb-fe6fac180764/image.png"}}},{"node":{"fields":{"date":"2024-03-03","slug":"/posts/functional-exception"},"frontmatter":{"title":"[TIL] 예외를 함수로 처리","image":"/images/og.png"}}},{"node":{"fields":{"date":"2024-04-03","slug":"/posts/til-json"},"frontmatter":{"title":"[TIL] JSON 유효하지 않은 문자열 제거","image":"https://velog.velcdn.com/images/aryumka/post/ed5979e8-49ef-4be8-9a1c-5b9203d2574f/image.png"}}},{"node":{"fields":{"date":"2024-04-22","slug":"/posts/rabbitmq-seven-patterns"},"frontmatter":{"title":"RabbitMQ 7가지 패턴 (with Spring AMQP tutorial)","image":"https://velog.velcdn.com/images/aryumka/post/f2266935-81ba-47b8-9b4f-910d28c1aaef/image.png"}}},{"node":{"fields":{"date":"2024-05-04","slug":"/posts/til-test-container"},"frontmatter":{"title":"[TIL] Test Container","image":"https://velog.velcdn.com/images/aryumka/post/9fcbd346-bd6e-4097-bce9-b7c9468b5cfc/image.png"}}},{"node":{"fields":{"date":"2024-05-05","slug":"/posts/til-axon-framework"},"frontmatter":{"title":"[TIL] Axon Framework - Token","image":"/images/og.png"}}},{"node":{"fields":{"date":"2024-02-07","slug":"/posts/til-kotlin-sort"},"frontmatter":{"title":"[TIL] Kotlin - sortedWith과 compareBy를 이용한 다중조건 정렬","image":"/images/og.png"}}},{"node":{"fields":{"date":"2024-02-18","slug":"/posts/reinventing-di-framework"},"frontmatter":{"title":"[바퀴의 재발명] DI 프레임워크 직접 만들어보기","image":"https://velog.velcdn.com/images/aryumka/post/94394c32-2228-4acb-8be0-a82e13fa78a1/image.png"}}},{"node":{"fields":{"date":"2024-01-16","slug":"/posts/til-gradle-build-error"},"frontmatter":{"title":"[TIL] 인텔리제이 gradle 빌드 오류(feat. JDK 버젼 호환)","image":"https://velog.velcdn.com/images/aryumka/post/14ac2014-f469-4a23-b3cd-d95c2e912efe/image.png"}}}]}},"pageContext":{"slug":"/posts/holiday-til-3","frontmatter":{"title":"[연휴개발TIL] DAY3","categories":"dev","tags":["TIL","JPA","Test","Transaction"],"series":"","cover":"","image":"https://velog.velcdn.com/images/aryumka/post/0c169fc0-5d98-4cd2-9d50-04672ebc9d84/image.png","comments":true,"draft":false,"hide":false}}},"staticQueryHashes":["595849736","63159454"],"slicesMap":{}}
"use strict";(self.webpackChunkaryumka_me=self.webpackChunkaryumka_me||[]).push([[1482,2600,3284,4164,4646,4926,6638,7824,8995],{99:function(n,e,a){var t=a(9474),s=a(1615),l=a(3543);e.A=n=>{let{src:e,caption:a,width:o,expandable:c}=n;const{0:p,1:r}=(0,t.useState)(!1);return(0,l.Y)("figure",null,(0,l.Y)("img",{src:e,width:o,style:{cursor:c?"zoom-in":"default"},onClick:c?()=>r(!0):void 0}),a&&(0,l.Y)("figcaption",{dangerouslySetInnerHTML:{__html:a}}),p&&s.createPortal((0,l.Y)("div",{style:{position:"fixed",top:0,left:0,width:"100%",height:"100%",cursor:"zoom-out",backgroundColor:"rgba(0, 0, 0, 0.7)"},onClick:()=>r(!1)},(0,l.Y)("div",{style:{borderRadius:8,maxWidth:1200,width:"80%",position:"fixed",top:"50%",left:"50%",transform:"translate(-50%, -50%)",backgroundColor:"white"}},(0,l.Y)("img",{src:e,width:"100%"}))),document.body))}},7104:function(n,e,a){a.r(e);var t=a(9128),s=a(9474),l=a(99);function o(n){const e=Object.assign({h2:"h2",a:"a",p:"p",h3:"h3",blockquote:"blockquote",span:"span"},(0,t.R)(),n.components);return s.createElement(s.Fragment,null,s.createElement(e.h2,{id:"github-actions"},s.createElement(e.a,{href:"#github-actions"},"Github actions")),"\n",s.createElement(e.p,null,"Github과 연동되는 CI/CD 플랫폼.\nworkflow라는 것을 기반으로 빌드, 테스트, 배포 자동화 파이프라인을 구축할 수 있다."),"\n",s.createElement(e.h3,{id:"workflow"},s.createElement(e.a,{href:"#workflow"},"Workflow")),"\n",s.createElement(e.p,null,"git 저장소에 event가 일어나면 실행되는 하나 이상의 Job으로 이루어진 자동화된 프로세스.\n한 저장소가 여러개의 workflow를 가질 수 있다. 단순한 CI/CD 이상의 전체적인 프로젝트 싸이클을 관리할 수 있다.\n_ex. pull request 때 마다 빌드하고 테스트하는 worflow, 새로운 release가 생성될 떄마다 배포되는 workflow, 누군가가 새로운 이슈를 열 때마다 label을 붙이는 workflow...etc\n_\n.github/workflows/에 .yml파일을 생성하여 workflow를 정의한다."),"\n",s.createElement(e.blockquote,null,"\n",s.createElement(e.p,null,"기본 템플릿을 생성해준다."),"\n"),"\n",s.createElement(l.A,{src:"https://velog.velcdn.com/images/aryumka/post/952cf23b-36ec-4a6b-9217-1c787e501f68/image.png"}),"\n",s.createElement(l.A,{src:"https://velog.velcdn.com/images/aryumka/post/087bf023-0d07-48ad-b50f-b306e7ed37f2/image.png"}),"\n",s.createElement(e.p,null,"하나의 workflow는 하나 이상의 job으로 구성된다."),"\n",s.createElement(e.p,null,"***workflow의 구성 **\n  workflow\n    └ jobs\n      └ steps\n        └ shell script 또는 action"),"\n",s.createElement(e.h3,{id:"event"},s.createElement(e.a,{href:"#event"},"Event")),"\n",s.createElement(e.p,null,"workflow가 언제 실행 될 것인지를 정의한다.\n.yml파일에는 아래와 같이 정의된다."),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="yml"><pre class="language-yml"><code class="language-yml"><span class="token key atrule">name</span><span class="token punctuation">:</span> application\n\n<span class="token comment"># workflow를 정의할 이벤트 정의</span>\n<span class="token key atrule">on</span><span class="token punctuation">:</span>\n  <span class="token comment"># push나 pull request 이벤트에 따라 workflow가 발동된다.</span>\n  <span class="token key atrule">push</span><span class="token punctuation">:</span>\n    <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">"main"</span> <span class="token punctuation">]</span>\n  <span class="token key atrule">pull_request</span><span class="token punctuation">:</span>\n    <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">"main"</span> <span class="token punctuation">]</span></code></pre></div>'}}),"\n",s.createElement(e.p,null,"크론으로 이벤트 스케쥴링 할 수도 있고 api 요청을 통해 실행할 수도 있다고 한다."),"\n",s.createElement(e.h3,{id:"jobs"},s.createElement(e.a,{href:"#jobs"},"Jobs")),"\n",s.createElement(e.p,null,"CI, CD 등의 각 파이프라인을 구성하는 요소가 job으로 정의된다. 하나의 job은 같은 runner 안에서 처리되므로 step끼리 서로 데이터를 공유할 수도 있다. 예를 들어 CI와 CD를 하나의 job안에서 처리하면 별도로 빌드 결과물을 다른 곳에 저장하고 불러올 필요가 없어진다."),"\n",s.createElement(e.p,null,"하나의 job은 다른 job을 참조할 수도 있다. 기본적으로 병렬로 처리되지만 아래와 같이 서로 의존관계를 갖도록 설정할 수도 있다."),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="yml"><pre class="language-yml"><code class="language-yml">  <span class="token key atrule">build</span><span class="token punctuation">:</span>\n  <span class="token punctuation">...</span>\n  <span class="token key atrule">deploy</span><span class="token punctuation">:</span>\n  \t<span class="token comment">#build라는 다른 job을 참조하며 동시에 의존성을 가진다.</span>\n    <span class="token key atrule">needs</span><span class="token punctuation">:</span> build</code></pre></div>'}}),"\n",s.createElement(e.h3,{id:"runner"},s.createElement(e.a,{href:"#runner"},"Runner")),"\n",s.createElement(e.p,null,"하나의 job이 실행되는 환경이다. 각 job 마다 환경을 정의해주어야 한다."),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="yml"><pre class="language-yml"><code class="language-yml"><span class="token key atrule">jobs</span><span class="token punctuation">:</span>\n  <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest\n  build<span class="token punctuation">:</span></code></pre></div>'}}),"\n",s.createElement(e.p,null,"runner는 클라우드로 제공이 되며 직접 호스팅하여 on-premise로 사용할 수도 있다."),"\n",s.createElement(e.h3,{id:"actions"},s.createElement(e.a,{href:"#actions"},"Actions")),"\n",s.createElement(e.p,null,"하나의 스텝에서 실행될 수 있는 어플리케이션이다. 재사용이 가능하기 때문에 CI/CD에 필요한 반복적인 코드를 줄일 수 있다."),"\n",s.createElement(e.p,null,"직접 액션을 만들수도 있고"),"\n",s.createElement(l.A,{src:"https://velog.velcdn.com/images/aryumka/post/07ec2107-424c-4a8c-9c11-005508653ee2/image.png"}),"\n",s.createElement(e.p,null,s.createElement(e.a,{href:"https://github.com/orgs/actions/repositories",rel:"nofollow noopener noreferrer"},"깃헙 액션즈 레파지토리")," 또는 ",s.createElement(e.a,{href:"https://github.com/marketplace?type=actions",rel:"nofollow noopener noreferrer"},"깃헙 마켓플레이스"),"에서 기존에 만들어진 것을 사용할 수도 있다."),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="yml"><pre class="language-yml"><code class="language-yml">    <span class="token key atrule">steps</span><span class="token punctuation">:</span>\n      <span class="token comment"># $GITHUB_WORKSPACE에 있는 저장소에서 체크아웃을 받아서 해당 job에서 접근 가능하도록 하는 액션</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v4</code></pre></div>'}}))}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,t.R)(),n.components);return e?s.createElement(e,n,s.createElement(o,n)):o(n)}},9128:function(n,e,a){a.d(e,{R:function(){return o}});var t=a(9474);const s={},l=t.createContext(s);function o(n){const e=t.useContext(l);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}}}]);
//# sourceMappingURL=component---src-posts-2024-01-03-github-actions-mdx-4055b7a5445276af5629.js.map
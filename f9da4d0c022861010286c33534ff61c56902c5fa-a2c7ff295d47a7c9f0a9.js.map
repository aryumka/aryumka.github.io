{"version":3,"file":"f9da4d0c022861010286c33534ff61c56902c5fa-a2c7ff295d47a7c9f0a9.js","mappings":"+IAmBA,MAAMA,EAAMC,IAA6C,IAADC,EAAAC,EAAAC,EAAA,IAA3C,MAAEC,EAAK,YAAEC,EAAW,KAAEC,GAAgBN,EACjD,MAAM,KAAEO,IAASC,EAAAA,EAAAA,gBAAe,YAY1BC,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAYP,IAA0B,QAArBH,EAAIM,EAAKG,oBAAY,IAAAT,OAAA,EAAjBA,EAAmBG,OAE9C,OACEQ,EAAAA,EAAAA,GAACC,EAAAA,EAAM,CACLC,eAAgB,CACdC,GAAI,MAENX,MAAOO,EACPK,cAAeZ,EAAQ,uBAAoBa,EAC3CX,KAAM,CACJ,CACEY,KAAM,cACNC,QAASV,GAEX,CACEW,SAAU,SACVD,QAAS,iBAEX,CACEC,SAAU,WACVD,QAASR,GAEX,CACES,SAAU,iBACVD,QAASV,GAEX,CACEW,SAAU,UACVD,QAAS,WAEX,CACEC,SAAU,eACVD,QAAS,cAEX,CACEC,SAAU,YACVD,QAAS,SAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAAS,gBAEX,CACED,KAAM,gBACNC,QAASR,GAEX,CACEO,KAAM,sBACNC,QAASV,GAEX,CACEW,SAAU,WACVD,QACiE,QAD1DjB,EACiD,QADjDC,EACLG,EAAKe,MAAMC,GAAgC,aAAlBA,EAAKF,kBAAwB,IAAAjB,OAAA,EAAtDA,EAAwDgB,eAAO,IAAAjB,EAAAA,EAC/D,qCAEJqB,OAAOjB,IACT,EAINP,EAAIyB,aAAe,CACjBC,KAAM,KACNnB,KAAM,GACND,YAAa,IAUf,K,wDC/EA,IAtBoBL,IAAkD,IAAjD,MAAE0B,EAAK,QAAEC,EAAO,MAAEC,GAAyB5B,EAC9D,OACEY,EAAAA,EAAAA,GAACiB,EAAS,CAACD,MAAOA,IAChBhB,EAAAA,EAAAA,GAACkB,EAAK,KACHJ,EAAMK,KACJC,GACCA,EAAKC,KAAKC,OAAOC,OAASR,IACxBf,EAAAA,EAAAA,GAACwB,EAAI,CAACC,GAAIL,EAAKC,KAAKC,OAAOC,KAAMG,IAAKN,EAAKC,KAAKC,OAAOC,OACrDvB,EAAAA,EAAAA,GAAA,OACE2B,IAAKP,EAAKC,KAAKO,YAAYC,MAC3Bb,MAAO,CAAEc,UAAW,QAASC,MAAO,WAEtC/B,EAAAA,EAAAA,GAACgC,EAAK,KAAEZ,EAAKC,KAAKO,YAAYpC,QAC9BQ,EAAAA,EAAAA,GAAA,aAAQoB,EAAKC,KAAKC,OAAOW,UAKzB,EAMhB,MAAMhB,GAASiB,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAA5B,KAAA,UAAA8B,OAAA,yCAKTlB,GAAKgB,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAA5B,KAAA,UAAA8B,OAAA,sIAWLZ,GAAOU,EAAAA,EAAAA,GAAOG,EAAAA,KAAI,CAAAF,OAAA,aAAXD,CAAY,CAAA5B,KAAA,SAAA8B,OAAA,gpBA2EnBJ,GAAKE,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAA5B,KAAA,SAAA8B,OAAA,mE","sources":["webpack://aryumka.me/./src/components/SEO/index.tsx","webpack://aryumka.me/./src/components/RelatedPost/index.tsx"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  imagePath?: string;\n  meta?: any;\n}\n\nconst SEO = ({ title, description, meta }: SEOProps) => {\n  const { site } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          author\n        }\n      }\n    }\n  `);\n\n  const metaDescription = description || site.siteMetadata.description;\n  const metaTitle = title || site.siteMetadata?.title;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        ko: 'ko'\n      }}\n      title={metaTitle}\n      titleTemplate={title ? `%s | aryumka.me` : undefined}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `author`,\n          content: `Lee Sun-Hyoup`\n        },\n        {\n          property: `og:title`,\n          content: metaTitle\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          property: `og:site_name`,\n          content: `aryumka.me`\n        },\n        {\n          property: `og:locale`,\n          content: `ko_KR`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: 'Sunhyoup Lee'\n        },\n        {\n          name: `twitter:title`,\n          content: metaTitle\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:image`,\n          content:\n            meta.find((item: any) => item.property === 'og:image')?.content ??\n            'https://aryumka.me/images/og.png'\n        }\n      ].concat(meta)}\n    />\n  );\n};\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n","import styled from '@emotion/styled';\nimport { graphql, Link, useStaticQuery } from 'gatsby';\nimport React from 'react';\n\ninterface RelatedPostProps {\n  posts: any;\n  current?: string;\n  style?: React.CSSProperties;\n}\n\nconst RelatedPost = ({ posts, current, style }: RelatedPostProps) => {\n  return (\n    <Container style={style}>\n      <Posts>\n        {posts.map(\n          (post: any) =>\n            post.node.fields.slug !== current && (\n              <Post to={post.node.fields.slug} key={post.node.fields.slug}>\n                <img\n                  src={post.node.frontmatter.image}\n                  style={{ objectFit: 'cover', width: '100%' }}\n                />\n                <Title>{post.node.frontmatter.title}</Title>\n                <small>{post.node.fields.date}</small>\n              </Post>\n            )\n        )}\n      </Posts>\n    </Container>\n  );\n};\n\nexport default RelatedPost;\n\nconst Container = styled.div`\n  padding-top: 2rem;\n  padding-bottom: 2rem;\n`;\n\nconst Posts = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  row-gap: 20px;\n  column-gap: 20px;\n\n  @media (max-width: 30rem) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst Post = styled(Link)`\n  img {\n    display: block;\n    height: 140px;\n    object-fit: cover;\n    box-shadow: 0 0 10px 2px rgba(0, 0, 0, 0.05);\n\n    @media (max-width: 30rem) {\n      width: 100%;\n    }\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  position: relative;\n  display: block;\n  transition: all 333ms ease 0s;\n  text-decoration: none;\n\n  @media (max-width: 768px) {\n    margin-top: -12px !important;\n  }\n\n  transform: scale3d(1, 1, 1);\n\n  &::after {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 8px;\n    transform: scale(1.06);\n    transition: opacity 2s cubic-bezier(0.165, 0.84, 0.44, 1);\n    box-shadow:\n      0 8px 17px 0 rgba(0, 0, 0, 0.2),\n      0 6px 20px 0 rgba(0, 0, 0, 0.15);\n    content: '';\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover {\n    transform: scale3d(1.006, 1.006, 1);\n\n    &::after {\n      opacity: 1;\n    }\n  }\n\n  /* &::before {\n    content: \"\";\n    border-radius: 16px;\n    display: block;\n    position: absolute;\n    z-index: -1;\n    inset: -2px;\n    opacity: 0;\n    transform: scale(0.9);\n    transition: all 333ms ease 0s;\n  }\n\n  &:hover::before {\n    opacity: 1;\n    background: linear-gradient(\n      135deg,\n      rgba(234, 234, 234, 0.7) 0%,\n      rgba(244, 244, 244, 0.7) 100%\n    );\n    transform: scale(1.04);\n  } */\n`;\n\nconst Title = styled.div`\n  margin-top: 12px;\n  /* font-family: serif; */\n  font-size: 20px;\n  line-height: 24px;\n  font-weight: 100;\n`;\n"],"names":["SEO","_ref","_site$siteMetadata","_meta$find$content","_meta$find","title","description","meta","site","useStaticQuery","metaDescription","siteMetadata","metaTitle","___EmotionJSX","Helmet","htmlAttributes","ko","titleTemplate","undefined","name","content","property","find","item","concat","defaultProps","lang","posts","current","style","Container","Posts","map","post","node","fields","slug","Post","to","key","src","frontmatter","image","objectFit","width","Title","date","_styled","target","styles","Link"],"sourceRoot":""}
"use strict";(self.webpackChunkaryumka_me=self.webpackChunkaryumka_me||[]).push([[8131,4164,4646,1482,7824,6638,3284,8995],{9097:function(n,a,s){s.r(a);var t=s(9128),e=s(9474),p=s(5799);function c(n){const a=Object.assign({p:"p",ul:"ul",li:"li",span:"span"},(0,t.R)(),n.components);return e.createElement(e.Fragment,null,e.createElement(p.A,{src:"https://velog.velcdn.com/images/aryumka/post/5bcf0cef-b279-41be-91fd-b353cda4b285/image.png"}),"\n",e.createElement(a.p,null,"서버 인스턴스 이미지 - 아마존 리눅스\nkey 파일 - .pem으로 생성\n인스턴스 유형 - t2 micro (이유: 프리티어이고 제일 쌈)\n이렇게 대부분 설정은 디폴트로 생성."),"\n",e.createElement(p.A,{src:"https://velog.velcdn.com/images/aryumka/post/77d1fad1-4b21-48f8-83e3-9ed1c7e93fff/image.png"}),"\n",e.createElement(a.p,null,"인스턴스 생성이 잘 되었다."),"\n",e.createElement(a.p,null,"다음은 키, ip, user 등의 서버정보를 숨기기 위해 깃헙 settings > security에서 키 설정"),"\n",e.createElement(p.A,{src:"https://velog.velcdn.com/images/aryumka/post/efd37719-bf23-4f0d-b8f7-85cc358792a8/image.png"}),"\n",e.createElement(a.p,null,"두 가지 secrets 변수를 설정할 수 있다."),"\n",e.createElement(a.ul,null,"\n",e.createElement(a.li,null,"Environment secrets\nprd, stg 등 배포 환경에 따라 설정 가능(이미지에서는 key로 설정)"),"\n",e.createElement(a.li,null,"Repository secrets\n저장소에서 공유되는 변수."),"\n"),"\n",e.createElement(p.A,{src:"https://velog.velcdn.com/images/aryumka/post/d80dee44-3a42-4ce3-a623-d7436eef8ae0/image.png"}),"\n",e.createElement(a.p,null,"다음은 이렇게 설정한 정보로 워크플로우 .yml 파일에 deploy job 작성"),"\n",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="yml"><pre class="language-yml"><code class="language-yml">  <span class="token key atrule">deploy</span><span class="token punctuation">:</span>\n    <span class="token key atrule">environment</span><span class="token punctuation">:</span> key\n    <span class="token key atrule">needs</span><span class="token punctuation">:</span> build\n    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest\n    <span class="token key atrule">steps</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Download artifact\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/download<span class="token punctuation">-</span>artifact@v2\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">name</span><span class="token punctuation">:</span> result\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Setup SSH\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> webfactory/ssh<span class="token punctuation">-</span>agent@v0.5.4\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">ssh-private-key</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.KEY <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> SCP transfer\n        <span class="token key atrule">run</span><span class="token punctuation">:</span> scp <span class="token important">*.jar</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.USER <span class="token punctuation">}</span><span class="token punctuation">}</span>@$<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.IP <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">:</span>~/\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Execute remote commands\n        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">\n          ssh ${{ secrets.USER }}@${{ secrets.IP }} "sudo fuser -k 8080/tcp"\n          ssh ${{ secrets.USER }}@${{ secrets.IP }} "sudo nohup java -jar ~/*.jar &amp;"</span></code></pre></div>'}}),"\n",e.createElement(a.p,null,"먼저 job의 environment로 설정한 환경변수 이름을 넣어준다."),"\n",e.createElement(a.p,null,"build된 결과물을 action/artifact에서 다운로드 받아서 전송해준다.\n그런데 위의 스크립트에 문제가 있었다.\nssh에 접속하기 위한 ssh-agent action에서 Host key 인증이 실패했다."),"\n",e.createElement(p.A,{src:"https://velog.velcdn.com/images/aryumka/post/39fad39f-a1cc-46be-a6cf-56cf289ab164/image.png"}),"\n",e.createElement(a.p,null,"직접 키파일을 만들어 전송하는 스크립트로 바꿨다."),"\n",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="yml"><pre class="language-yml"><code class="language-yml">    <span class="token key atrule">steps</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Download artifact\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/download<span class="token punctuation">-</span>artifact@v2\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">name</span><span class="token punctuation">:</span> result\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Make pem file\n        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">\n          echo "$key" >> $HOME/key.pem\n          chmod 400 $HOME/key.pem</span>\n        <span class="token key atrule">env</span><span class="token punctuation">:</span>\n          <span class="token key atrule">key</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span>secrets.KEY<span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> SCP transfer\n        <span class="token key atrule">run</span><span class="token punctuation">:</span> scp <span class="token punctuation">-</span>i $HOME/key.pem <span class="token punctuation">-</span>o StrictHostKeyChecking=no <span class="token important">*.jar</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.USER <span class="token punctuation">}</span><span class="token punctuation">}</span>@$<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.IP <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">:</span>~/\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Execute remote commands\n        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">\n          # ssh -i $HOME/key.pem -o StrictHostKeyChecking=no ${{ secrets.USER }}@${{ secrets.IP }} "sudo fuser -k 8080/tcp" # 임시 주석\n          ssh -i $HOME/key.pem -o StrictHostKeyChecking=no ${{ secrets.USER }}@${{ secrets.IP }} "sudo nohup java -jar ~/*.jar &amp;"</span></code></pre></div>'}}),"\n",e.createElement(a.p,null,"scp option에  -o StrictHostKeyChecking=no를 안붙이니까 안됐다."),"\n",e.createElement(p.A,{src:"https://velog.velcdn.com/images/aryumka/post/31658594-e0c1-4858-874c-1c57c0aab139/image.png"}),"\n",e.createElement(a.p,null,"성공했다."))}a.default=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,t.R)(),n.components);return a?e.createElement(a,n,e.createElement(c,n)):c(n)}},5799:function(n,a,s){var t=s(9474),e=s(1615),p=s(6810);a.A=n=>{let{src:a,caption:s,width:c,expandable:o}=n;const{0:u,1:l}=(0,t.useState)(!1);return(0,p.Y)("figure",null,(0,p.Y)("img",{src:a,width:c,style:{cursor:o?"zoom-in":"default"},onClick:o?()=>l(!0):void 0}),s&&(0,p.Y)("figcaption",{dangerouslySetInnerHTML:{__html:s}}),u&&e.createPortal((0,p.Y)("div",{style:{position:"fixed",top:0,left:0,width:"100%",height:"100%",cursor:"zoom-out",backgroundColor:"rgba(0, 0, 0, 0.7)"},onClick:()=>l(!1)},(0,p.Y)("div",{style:{borderRadius:8,maxWidth:1200,width:"80%",position:"fixed",top:"50%",left:"50%",transform:"translate(-50%, -50%)",backgroundColor:"white"}},(0,p.Y)("img",{src:a,width:"100%"}))),document.body))}},9128:function(n,a,s){s.d(a,{R:function(){return c}});var t=s(9474);const e={},p=t.createContext(e);function c(n){const a=t.useContext(p);return t.useMemo((function(){return"function"==typeof n?n(a):{...a,...n}}),[a,n])}}}]);
//# sourceMappingURL=component---src-posts-2024-01-02-holiday-til-4-mdx-bf279f5832c3dd9cf75d.js.map
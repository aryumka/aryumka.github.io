{"version":3,"file":"component---src-posts-2024-01-02-holiday-til-4-mdx-0f22a270246d969c0e73.js","mappings":"sKAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,IAAK,MACLC,GAAI,KACJC,GAAI,KACJC,KAAM,SACLC,EAAAA,EAAAA,KAAsBT,EAAMU,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBV,EAAYG,EAAG,KAAMO,EAAAA,cAAoBV,EAAYI,IAAK,CAC7HO,IAAK,8FACLC,IAAK,KACH,4GAA6GF,EAAAA,cAAoBV,EAAYI,IAAK,CACpJO,IAAK,8FACLC,IAAK,KACH,qBAAsB,KAAMF,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,kEAAmEO,EAAAA,cAAoBV,EAAYI,IAAK,CAC/KO,IAAK,8FACLC,IAAK,KACH,gCAAiC,KAAMF,EAAAA,cAAoBV,EAAYK,GAAI,KAAM,KAAMK,EAAAA,cAAoBV,EAAYM,GAAI,KAAM,mEAAoE,KAAMI,EAAAA,cAAoBV,EAAYM,GAAI,KAAM,uCAAwCI,EAAAA,cAAoBV,EAAYI,IAAK,CACpUO,IAAK,8FACLC,IAAK,MACF,MAAO,KAAMF,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,gDAAiD,KAAMO,EAAAA,cAAoBV,EAAYO,KAAM,CACtJM,wBAAyB,CACvBC,OAAQ,y6FAER,KAAMJ,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,2CAA4C,KAAMO,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,6HAA8HO,EAAAA,cAAoBV,EAAYI,IAAK,CAC/SO,IAAK,8FACLC,IAAK,MACF,KAAMF,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,+BAAgC,KAAMO,EAAAA,cAAoBV,EAAYO,KAAM,CAC9HM,wBAAyB,CACvBC,OAAQ,4yFAER,KAAMJ,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,wDAAyD,KAAMO,EAAAA,cAAoBV,EAAYG,EAAG,KAAMO,EAAAA,cAAoBV,EAAYI,IAAK,CAC9LO,IAAK,8FACLC,IAAK,KACH,WACN,CAKA,UAJA,SAAoBb,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,KAAsBT,EAAMU,YAC3E,OAAOO,EAAYN,EAAAA,cAAoBM,EAAWjB,EAAOW,EAAAA,cAAoBZ,EAAmBC,IAAUD,EAAkBC,EAC9H,C,qECfA,MAAMkB,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBV,GAC/B,MAAMW,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfT,EACFA,EAAWW,GAGb,IAAIA,KAAsBX,EACnC,GACA,CAACW,EAAmBX,GAExB,C","sources":["webpack://aryumka.me/./src/posts/2024-01-02-holiday-til-4.mdx","webpack://aryumka.me/./node_modules/.pnpm/@mdx-js+react@3.0.1_@types+react@18.2.79_react@18.2.0/node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    ul: \"ul\",\n    li: \"li\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"https://velog.velcdn.com/images/aryumka/post/5bcf0cef-b279-41be-91fd-b353cda4b285/image.png\",\n    alt: \"\"\n  }), \"\\n서버 인스턴스 이미지 - 아마존 리눅스\\nkey 파일 - .pem으로 생성\\n인스턴스 유형 - t2 micro (이유: 프리티어이고 제일 쌈)\\n이렇게 대부분 설정은 디폴트로 생성.\\n\", React.createElement(_components.img, {\n    src: \"https://velog.velcdn.com/images/aryumka/post/77d1fad1-4b21-48f8-83e3-9ed1c7e93fff/image.png\",\n    alt: \"\"\n  }), \"\\n인스턴스 생성이 잘 되었다.\"), \"\\n\", React.createElement(_components.p, null, \"다음은 키, ip, user 등의 서버정보를 숨기기 위해 깃헙 settings > security에서 키 설정\\n\", React.createElement(_components.img, {\n    src: \"https://velog.velcdn.com/images/aryumka/post/efd37719-bf23-4f0d-b8f7-85cc358792a8/image.png\",\n    alt: \"\"\n  }), \"\\n두 가지 secrets 변수를 설정할 수 있다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Environment secrets\\nprd, stg 등 배포 환경에 따라 설정 가능(이미지에서는 key로 설정)\"), \"\\n\", React.createElement(_components.li, null, \"Repository secrets\\n저장소에서 공유되는 변수.\\n\", React.createElement(_components.img, {\n    src: \"https://velog.velcdn.com/images/aryumka/post/d80dee44-3a42-4ce3-a623-d7436eef8ae0/image.png\",\n    alt: \"\"\n  })), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"다음은 이렇게 설정한 정보로 워크플로우 .yml 파일에 deploy job 작성\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"yml\\\"><pre class=\\\"language-yml\\\"><code class=\\\"language-yml\\\">  <span class=\\\"token key atrule\\\">deploy</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token key atrule\\\">environment</span><span class=\\\"token punctuation\\\">:</span> key\\n    <span class=\\\"token key atrule\\\">needs</span><span class=\\\"token punctuation\\\">:</span> build\\n    <span class=\\\"token key atrule\\\">runs-on</span><span class=\\\"token punctuation\\\">:</span> ubuntu<span class=\\\"token punctuation\\\">-</span>latest\\n    <span class=\\\"token key atrule\\\">steps</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token key atrule\\\">name</span><span class=\\\"token punctuation\\\">:</span> Download artifact\\n        <span class=\\\"token key atrule\\\">uses</span><span class=\\\"token punctuation\\\">:</span> actions/download<span class=\\\"token punctuation\\\">-</span>artifact@v2\\n        <span class=\\\"token key atrule\\\">with</span><span class=\\\"token punctuation\\\">:</span>\\n          <span class=\\\"token key atrule\\\">name</span><span class=\\\"token punctuation\\\">:</span> result\\n      <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token key atrule\\\">name</span><span class=\\\"token punctuation\\\">:</span> Setup SSH\\n        <span class=\\\"token key atrule\\\">uses</span><span class=\\\"token punctuation\\\">:</span> webfactory/ssh<span class=\\\"token punctuation\\\">-</span>agent@v0.5.4\\n        <span class=\\\"token key atrule\\\">with</span><span class=\\\"token punctuation\\\">:</span>\\n          <span class=\\\"token key atrule\\\">ssh-private-key</span><span class=\\\"token punctuation\\\">:</span> $<span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> secrets.KEY <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token key atrule\\\">name</span><span class=\\\"token punctuation\\\">:</span> SCP transfer\\n        <span class=\\\"token key atrule\\\">run</span><span class=\\\"token punctuation\\\">:</span> scp <span class=\\\"token important\\\">*.jar</span> $<span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> secrets.USER <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>@$<span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> secrets.IP <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span>~/\\n      <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token key atrule\\\">name</span><span class=\\\"token punctuation\\\">:</span> Execute remote commands\\n        <span class=\\\"token key atrule\\\">run</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">|</span><span class=\\\"token scalar string\\\">\\n          ssh ${{ secrets.USER }}@${{ secrets.IP }} \\\"sudo fuser -k 8080/tcp\\\"\\n          ssh ${{ secrets.USER }}@${{ secrets.IP }} \\\"sudo nohup java -jar ~/*.jar &amp;\\\"</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"먼저 job의 environment로 설정한 환경변수 이름을 넣어준다.\"), \"\\n\", React.createElement(_components.p, null, \"build된 결과물을 action/artifact에서 다운로드 받아서 전송해준다.\\n그런데 위의 스크립트에 문제가 있었다.\\nssh에 접속하기 위한 ssh-agent action에서 Host key 인증이 실패했다.\\n\", React.createElement(_components.img, {\n    src: \"https://velog.velcdn.com/images/aryumka/post/39fad39f-a1cc-46be-a6cf-56cf289ab164/image.png\",\n    alt: \"\"\n  })), \"\\n\", React.createElement(_components.p, null, \"직접 키파일을 만들어 전송하는 스크립트로 바꿨다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"yml\\\"><pre class=\\\"language-yml\\\"><code class=\\\"language-yml\\\">    <span class=\\\"token key atrule\\\">steps</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token key atrule\\\">name</span><span class=\\\"token punctuation\\\">:</span> Download artifact\\n        <span class=\\\"token key atrule\\\">uses</span><span class=\\\"token punctuation\\\">:</span> actions/download<span class=\\\"token punctuation\\\">-</span>artifact@v2\\n        <span class=\\\"token key atrule\\\">with</span><span class=\\\"token punctuation\\\">:</span>\\n          <span class=\\\"token key atrule\\\">name</span><span class=\\\"token punctuation\\\">:</span> result\\n      <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token key atrule\\\">name</span><span class=\\\"token punctuation\\\">:</span> Make pem file\\n        <span class=\\\"token key atrule\\\">run</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">|</span><span class=\\\"token scalar string\\\">\\n          echo \\\"$key\\\" >> $HOME/key.pem\\n          chmod 400 $HOME/key.pem</span>\\n        <span class=\\\"token key atrule\\\">env</span><span class=\\\"token punctuation\\\">:</span>\\n          <span class=\\\"token key atrule\\\">key</span><span class=\\\"token punctuation\\\">:</span> $<span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>secrets.KEY<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token key atrule\\\">name</span><span class=\\\"token punctuation\\\">:</span> SCP transfer\\n        <span class=\\\"token key atrule\\\">run</span><span class=\\\"token punctuation\\\">:</span> scp <span class=\\\"token punctuation\\\">-</span>i $HOME/key.pem <span class=\\\"token punctuation\\\">-</span>o StrictHostKeyChecking=no <span class=\\\"token important\\\">*.jar</span> $<span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> secrets.USER <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>@$<span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> secrets.IP <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span>~/\\n      <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token key atrule\\\">name</span><span class=\\\"token punctuation\\\">:</span> Execute remote commands\\n        <span class=\\\"token key atrule\\\">run</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">|</span><span class=\\\"token scalar string\\\">\\n          # ssh -i $HOME/key.pem -o StrictHostKeyChecking=no ${{ secrets.USER }}@${{ secrets.IP }} \\\"sudo fuser -k 8080/tcp\\\" # 임시 주석\\n          ssh -i $HOME/key.pem -o StrictHostKeyChecking=no ${{ secrets.USER }}@${{ secrets.IP }} \\\"sudo nohup java -jar ~/*.jar &amp;\\\"</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"scp option에  -o StrictHostKeyChecking=no를 안붙이니까 안됐다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"https://velog.velcdn.com/images/aryumka/post/31658594-e0c1-4858-874c-1c57c0aab139/image.png\",\n    alt: \"\"\n  }), \"\\n성공했다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","img","ul","li","span","_provideComponents","components","React","src","alt","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}
{"version":3,"file":"component---src-templates-post-tsx-content-file-path-src-posts-2023-12-28-holiday-til-1-mdx-8cc3ffa405a8c7f31be7.js","mappings":"8IAyDA,IA/CcA,IAAsD,IAArD,IAAEC,EAAG,QAAEC,EAAO,MAAEC,EAAK,WAAEC,GAAwBJ,EAC5D,MAAM,EAACK,EAAW,EAACC,IAAkBC,EAAAA,EAAAA,WAAS,GAE9C,OACEC,EAAAA,EAAAA,GAAA,eACEA,EAAAA,EAAAA,GAAA,OACEP,IAAKA,EACLE,MAAOA,EACPM,MAAO,CAAEC,OAAQN,EAAa,UAAY,WAC1CO,QAASP,EAAa,IAAME,GAAe,QAAQM,IAEpDV,IAAWM,EAAAA,EAAAA,GAAA,cAAYK,wBAAyB,CAAEC,OAAQZ,KAC1DG,GACCU,EAAAA,cACEP,EAAAA,EAAAA,GAAA,OACEC,MAAO,CACLO,SAAU,QACVC,IAAK,EACLC,KAAM,EACNf,MAAO,OACPgB,OAAQ,OACRT,OAAQ,WACRU,gBAAiB,sBAEnBT,QAASA,IAAML,GAAe,KAE9BE,EAAAA,EAAAA,GAAA,OACEC,MAAO,CACLY,aAAc,EACdC,SAAU,KACVnB,MAAO,MACPa,SAAU,QACVC,IAAK,MACLC,KAAM,MACNK,UAAW,wBACXH,gBAAiB,WAGnBZ,EAAAA,EAAAA,GAAA,OAAKP,IAAKA,EAAKE,MAAM,WAGzBqB,SAASC,MAEN,C,0NCnCbC,IAAAA,OAAaC,EAAQ,OACrB,MAAMC,EAAe5B,IACnB,IAAI,KAAC6B,EAAI,SAAEC,EAAQ,YAAEC,EAAW,SAAEC,GAAYhC,EAC9C,MAAM,gBAACiC,EAAe,OAAEC,EAAM,YAAEC,EAAW,QAAEC,GAAWP,EAAKQ,KACvD,OAACC,GAAUP,EAEXQ,EAAOb,IAAMQ,EAAOK,MAAMC,OAAO,MAAMC,SACvCC,EAAoB,CACxBC,SAAUR,EAAYS,MACtBC,aAAcN,EACdO,cAAeP,EACfQ,MAAO,GAAGjB,EAASkB,OAAOb,EAAYY,QACtCE,iBAAkB,CAChB,QAAS,UACT,MAAOnB,EAASkB,MAElBE,OAAQ,CACN,QAAS,SACTC,KAbW,iBAebC,IAAKtB,EAASkB,KACdK,YAAajB,EACb,QAAS,cACT,WAAY,uBAEdkB,EAAAA,EAAAA,YAAU,UACgB1C,WAAbY,UACX+B,KAAE,WACAA,IAAE,wCAAwCC,MAAK,CAACC,EAAGC,KACjD,IAAIC,EACJ,MAAMX,EAA4C,QAApCW,EAAUJ,IAAEG,GAAME,KAAK,eAAiC,IAAZD,OAAqB,EAASA,EAAQE,MAAM,GAChGC,EAAOP,IAAE,IAAMP,GAAMc,OAAOC,QAAQ,IAAK,IAC/CR,IAAEG,GAAME,KAAK,eAAgBE,EAAK,GAEtC,GAAE,GACD,IACH,MAAO,EAAGE,EAAO,EAAGC,IAAY1D,EAAAA,EAAAA,aAChC+C,EAAAA,EAAAA,YAAU,KACRW,EAASpC,EAAKqC,OAAOC,MAAMC,QAAOV,GAAQA,EAAKW,KAAKnC,OAAOoC,OAASpC,EAAOoC,OAAMC,MAAK,IAAMC,KAAKC,SAAW,KAAKZ,MAAM,EAAG,GAAG,GAC5H,IACH,MAAMa,EAAQvC,EAAYuC,QAASC,EACnC,OAAOnE,EAAAA,EAAAA,GAAcoE,EAAAA,EAAiB,MAAMpE,EAAAA,EAAAA,GAAcqE,EAAAA,EAAK,CAC7DjC,MAAOT,EAAYS,MACnBS,YAAajB,EACb0C,KAAM,CAAC,CACL3B,KAAM,yBACN4B,QAASrD,IAAMQ,EAAOK,MAAMC,OAAO,MAAMC,UACxC,CACDU,KAAM,QACN4B,QAAS,qBAAqB5C,EAAYY,SACzC,CACDiC,SAAU,WACVD,QAAS,qBAAqB5C,EAAYY,SACzC,CACDiC,SAAU,sBACVD,QAAS,qBAAqB5C,EAAYY,aAE1CvC,EAAAA,EAAAA,GAAcyE,EAAAA,EAAQ,MAAMzE,EAAAA,EAAAA,GAAc,SAAU,CACtD0E,KAAM,uBACLC,KAAKC,UAAU1C,MAAsBlC,EAAAA,EAAAA,GAAc,KAAM,CAC1D6E,UAAW,cACVlD,EAAYS,QAAQpC,EAAAA,EAAAA,GAAc,OAAQ,CAC3C6E,UAAW,aACV,cAAe3D,IAAMQ,EAAOK,MAAMC,OAAO,MAAMC,OAAO,QAAQjC,EAAAA,EAAAA,GAAc,MAAO,CACpFP,IAAKkC,EAAYY,MACjBtC,MAAO,CACL6E,UAAW,QACXC,UAAW,IACXpF,MAAO,UAEPuE,GAASzC,EAAgBuD,QAAShF,EAAAA,EAAAA,GAAciF,EAAAA,EAAiB,CACnED,MAAOvD,EAAgBuD,QACrBd,IAAUpC,aAAuC,EAASA,EAAOkD,SAAUhF,EAAAA,EAAAA,GAAckF,EAAAA,EAAQ,CACnG9C,MAAON,EAAOM,MACd4C,MAAOlD,EAAOkD,MACdG,YAAaxD,EAAYS,SACvBpC,EAAAA,EAAAA,GAAc,MAAO,CACvB6E,UAAW,gBACVX,GAAQlE,EAAAA,EAAAA,GAAcoF,EAAiB,KAAM,qBAAuB5D,IAAWxB,EAAAA,EAAAA,GAAcqF,EAAAA,EAAY,CAC1GC,KAAM3D,EAAY2D,KAClBC,QAAS5D,EAAY6D,WACnBhC,IAASxD,EAAAA,EAAAA,GAAcyF,EAAAA,EAAa,CACtCjC,MAAOA,EACPkC,QAAShE,EAAOoC,OACf,EAGU,SAAS6B,EAAiBC,GACvC,OAAOC,EAAAA,cAAoBzE,EAAcwE,EAAOC,EAAAA,cAAoBC,EAAAA,QAAqBF,GAC3F,CACA,MACMR,GAAkBW,EAAAA,EAAAA,GAAQ,MAA+C,CAC7EC,OAAQ,YADcD,CAKmB,CACzCpD,KAAM,SACNsD,OAAQ,mE,8DChHV,SAASC,EAAkBN,GACzB,MAAMO,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,WAAY,aACZC,GAAI,KACJC,GAAI,KACJC,KAAM,SACLC,EAAAA,EAAAA,KAAsBjB,EAAMkB,YAC/B,OAAOjB,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBM,EAAYG,GAAI,CACnFS,GAAI,iCACHlB,EAAAA,cAAoBM,EAAYI,EAAG,CACpC/D,KAAM,kCACL,kCAAmC,KAAMqD,EAAAA,cAAoBM,EAAYK,EAAG,KAAM,gLAAiL,KAAMX,EAAAA,cAAoBM,EAAYK,EAAG,KAAM,2BAA4B,KAAMX,EAAAA,cAAoBM,EAAYM,WAAY,KAAM,KAAMZ,EAAAA,cAAoBM,EAAYO,GAAI,KAAM,KAAMb,EAAAA,cAAoBM,EAAYQ,GAAI,KAAM,iDAAkD,KAAMd,EAAAA,cAAoBM,EAAYQ,GAAI,KAAM,sGAAuG,KAAMd,EAAAA,cAAoBM,EAAYQ,GAAI,KAAM,uDAAwD,MAAO,MAAO,KAAMd,EAAAA,cAAoBM,EAAYK,EAAG,KAAM,WAAYX,EAAAA,cAAoBM,EAAYI,EAAG,CACp4B/D,KAAM,qBACNwE,IAAK,gCACJ,UAAW,cAAe,KAAMnB,EAAAA,cAAoBM,EAAYK,EAAG,KAAM,+FAAgGX,EAAAA,cAAoBM,EAAYS,KAAM,CAChNvG,wBAAyB,CACvBC,OAAQ,wDAER,8BAA+B,KAAMuF,EAAAA,cAAoBM,EAAYG,GAAI,CAC3ES,GAAI,UACHlB,EAAAA,cAAoBM,EAAYI,EAAG,CACpC/D,KAAM,WACL,WAAY,KAAMqD,EAAAA,cAAoBM,EAAYK,EAAG,KAAM,0DAA2D,KAAMX,EAAAA,cAAoBoB,EAAAA,EAAO,CACxJxH,IAAK,gGACH,KAAMoG,EAAAA,cAAoBM,EAAYK,EAAG,KAAM,mJAAoJ,KAAMX,EAAAA,cAAoBM,EAAYK,EAAG,KAAM,mEAAoE,wBAAyB,KAAMX,EAAAA,cAAoBM,EAAYS,KAAM,CAC7XvG,wBAAyB,CACvBC,OAAQ,y0FAER,KAAMuF,EAAAA,cAAoBM,EAAYK,EAAG,KAAM,oFAAqFX,EAAAA,cAAoBM,EAAYS,KAAM,CAC5KvG,wBAAyB,CACvBC,OAAQ,mDAER,oDAAqD,KAAMuF,EAAAA,cAAoBM,EAAYS,KAAM,CACnGvG,wBAAyB,CACvBC,OAAQ,8+HAER,KAAMuF,EAAAA,cAAoBM,EAAYK,EAAG,KAAM,UAAW,KAAMX,EAAAA,cAAoBM,EAAYM,WAAY,KAAM,KAAMZ,EAAAA,cAAoBM,EAAYO,GAAI,KAAM,KAAMb,EAAAA,cAAoBM,EAAYQ,GAAI,KAAM,kNAAmN,KAAMd,EAAAA,cAAoBM,EAAYQ,GAAI,KAAM,+DAAgE,KAAMd,EAAAA,cAAoBM,EAAYQ,GAAI,KAAM,wFAAyF,MAAO,MAAO,KAAMd,EAAAA,cAAoBM,EAAYK,EAAG,KAAM,mFAAoF,KAAMX,EAAAA,cAAoBM,EAAYK,EAAG,KAAM,kBACp2B,CAKA,UAJA,SAAoBZ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOsB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,KAAsBjB,EAAMkB,YAC3E,OAAOK,EAAYtB,EAAAA,cAAoBsB,EAAWvB,EAAOC,EAAAA,cAAoBK,EAAmBN,IAAUM,EAAkBN,EAC9H,C","sources":["webpack://aryumka.me/./src/components/Image/index.tsx","webpack://aryumka.me/./src/templates/post.tsx","webpack://aryumka.me/./src/posts/2023-12-28-holiday-til-1.mdx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface ImageProps {\n  src: string;\n  caption?: string;\n  width?: number;\n  expandable?: boolean;\n}\n\nconst Image = ({ src, caption, width, expandable }: ImageProps) => {\n  const [isExpanded, toggleExpanded] = useState(false);\n\n  return (\n    <figure>\n      <img\n        src={src}\n        width={width}\n        style={{ cursor: expandable ? 'zoom-in' : 'default' }}\n        onClick={expandable ? () => toggleExpanded(true) : undefined}\n      />\n      {caption && <figcaption dangerouslySetInnerHTML={{ __html: caption }} />}\n      {isExpanded &&\n        ReactDOM.createPortal(\n          <div\n            style={{\n              position: 'fixed',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              cursor: 'zoom-out',\n              backgroundColor: 'rgba(0, 0, 0, 0.7)'\n            }}\n            onClick={() => toggleExpanded(false)}\n          >\n            <div\n              style={{\n                borderRadius: 8,\n                maxWidth: 1200,\n                width: '80%',\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: 'white'\n              }}\n            >\n              <img src={src} width=\"100%\" />\n            </div>\n          </div>,\n          document.body\n        )}\n    </figure>\n  );\n};\n\nexport default Image;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/aryumka.github.io/aryumka.github.io/src/posts/2023-12-28-holiday-til-1.mdx\";\nimport _styled from \"@emotion/styled/base\";\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n}\nimport React from 'react';\nimport DefaultTemplate from '@templates/default';\nimport SEO from '@components/SEO';\nimport dayjs from 'dayjs';\nimport PostFooter from '@components/PostFooter';\nimport RelatedPost from '@components/RelatedPost';\nimport TableOfContents from '@components/TableOfContents';\nimport {Helmet} from 'react-helmet';\nimport $ from 'jquery';\nimport {useEffect} from 'react';\nimport {useState} from 'react';\nimport Series from '@components/Series';\nimport {jsx as ___EmotionJSX} from \"@emotion/react\";\ndayjs.extend(require('dayjs/plugin/localizedFormat'));\nconst PostTemplate = _ref => {\n  let {data, location, pageContext, children} = _ref;\n  const {tableOfContents, fields, frontmatter, excerpt} = data.mdx;\n  const {series} = pageContext;\n  const author = 'Lee Sun-Hyoup';\n  const date = dayjs(fields.date).locale('ko').format();\n  const applicationLdJson = {\n    headline: frontmatter.title,\n    dateModified: date,\n    datePublished: date,\n    image: `${location.href}${frontmatter.image}`,\n    mainEntityOfPage: {\n      '@type': 'WebPage',\n      '@id': location.href\n    },\n    author: {\n      '@type': 'Person',\n      name: author\n    },\n    url: location.href,\n    description: excerpt,\n    '@type': 'BlogPosting',\n    '@context': 'https://schema.org'\n  };\n  useEffect(() => {\n    if (typeof document === undefined) return;\n    $(function () {\n      $('.post-container a[data-footnote-ref]').each((_, item) => {\n        var _$$attr;\n        const href = (_$$attr = $(item).attr('href')) === null || _$$attr === void 0 ? void 0 : _$$attr.slice(1);\n        const text = $('#' + href).text().replace('↩', '');\n        $(item).attr('data-tooltip', text);\n      });\n    });\n  }, []);\n  const {0: posts, 1: setPosts} = useState();\n  useEffect(() => {\n    setPosts(data.allMdx.edges.filter(item => item.node.fields.slug !== fields.slug).sort(() => Math.random() - 0.5).slice(0, 6));\n  }, []);\n  const draft = frontmatter.draft && process.env.NODE_ENV !== 'development';\n  return ___EmotionJSX(DefaultTemplate, null, ___EmotionJSX(SEO, {\n    title: frontmatter.title,\n    description: excerpt,\n    meta: [{\n      name: `article:published_time`,\n      content: dayjs(fields.date).locale('ko').format()\n    }, {\n      name: `image`,\n      content: `https://aryumka.me${frontmatter.image}`\n    }, {\n      property: `og:image`,\n      content: `https://aryumka.me${frontmatter.image}`\n    }, {\n      property: `og:image:secure_url`,\n      content: `https://aryumka.me${frontmatter.image}`\n    }]\n  }), ___EmotionJSX(Helmet, null, ___EmotionJSX(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(applicationLdJson))), ___EmotionJSX(\"h1\", {\n    className: \"post-title\"\n  }, frontmatter.title), ___EmotionJSX(\"span\", {\n    className: \"post-date\"\n  }, \"Written on \", dayjs(fields.date).locale('en').format('LL')), ___EmotionJSX(\"img\", {\n    src: frontmatter.image,\n    style: {\n      objectFit: 'cover',\n      maxHeight: 300,\n      width: '100%'\n    }\n  }), draft || tableOfContents.items && ___EmotionJSX(TableOfContents, {\n    items: tableOfContents.items\n  }), draft || (series === null || series === void 0 ? void 0 : series.items) && ___EmotionJSX(Series, {\n    title: series.title,\n    items: series.items,\n    currentItem: frontmatter.title\n  }), ___EmotionJSX(\"div\", {\n    className: \"post-content\"\n  }, draft ? ___EmotionJSX(NotYetPublished, null, \"Not yet published\") : children), ___EmotionJSX(PostFooter, {\n    tags: frontmatter.tags,\n    comment: frontmatter.comments\n  }), posts && ___EmotionJSX(RelatedPost, {\n    posts: posts,\n    current: fields.slug\n  }));\n};\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"2550809065\";\nconst NotYetPublished = _styled(\"div\", process.env.NODE_ENV === \"production\" ? {\n  target: \"ezegrm70\"\n} : {\n  target: \"ezegrm70\",\n  label: \"NotYetPublished\"\n})(process.env.NODE_ENV === \"production\" ? {\n  name: \"xl5zip\",\n  styles: \"margin:16px 0;font-weight:bold;font-size:20px;text-align:center\"\n} : {\n  name: \"xl5zip\",\n  styles: \"margin:16px 0;font-weight:bold;font-size:20px;text-align:center/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2FyeXVta2EuZ2l0aHViLmlvL2FyeXVta2EuZ2l0aHViLmlvL3NyYy90ZW1wbGF0ZXMvcG9zdC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0trQyIsImZpbGUiOiIvaG9tZS9ydW5uZXIvd29yay9hcnl1bWthLmdpdGh1Yi5pby9hcnl1bWthLmdpdGh1Yi5pby9zcmMvdGVtcGxhdGVzL3Bvc3QudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUxheW91dEVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGdyYXBocWwsIFBhZ2VQcm9wcywgdXNlU3RhdGljUXVlcnkgfSBmcm9tICdnYXRzYnknO1xuaW1wb3J0IERlZmF1bHRUZW1wbGF0ZSBmcm9tICdAdGVtcGxhdGVzL2RlZmF1bHQnO1xuaW1wb3J0IFNFTyBmcm9tICdAY29tcG9uZW50cy9TRU8nO1xuaW1wb3J0IGRheWpzIGZyb20gJ2RheWpzJztcbmltcG9ydCBQb3N0Rm9vdGVyIGZyb20gJ0Bjb21wb25lbnRzL1Bvc3RGb290ZXInO1xuaW1wb3J0IFJlbGF0ZWRQb3N0IGZyb20gJ0Bjb21wb25lbnRzL1JlbGF0ZWRQb3N0JztcbmltcG9ydCBUYWJsZU9mQ29udGVudHMgZnJvbSAnQGNvbXBvbmVudHMvVGFibGVPZkNvbnRlbnRzJztcbmltcG9ydCB7IEhlbG1ldCB9IGZyb20gJ3JlYWN0LWhlbG1ldCc7XG5pbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgU2VyaWVzIGZyb20gJ0Bjb21wb25lbnRzL1Nlcmllcyc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5cbmRheWpzLmV4dGVuZChyZXF1aXJlKCdkYXlqcy9wbHVnaW4vbG9jYWxpemVkRm9ybWF0JykpO1xuXG5jb25zdCBQb3N0VGVtcGxhdGUgPSAoeyBkYXRhLCBsb2NhdGlvbiwgcGFnZUNvbnRleHQsIGNoaWxkcmVuIH06IFBhZ2VQcm9wcykgPT4ge1xuICBjb25zdCB7IHRhYmxlT2ZDb250ZW50cywgZmllbGRzLCBmcm9udG1hdHRlciwgZXhjZXJwdCB9ID0gKGRhdGEgYXMgYW55KS5tZHg7XG5cbiAgY29uc3QgeyBzZXJpZXMgfSA9IHBhZ2VDb250ZXh0IGFzIGFueTtcblxuICBjb25zdCBhdXRob3IgPSAnTGVlIFN1bi1IeW91cCc7XG4gIGNvbnN0IGRhdGUgPSBkYXlqcyhmaWVsZHMuZGF0ZSkubG9jYWxlKCdrbycpLmZvcm1hdCgpO1xuICBjb25zdCBhcHBsaWNhdGlvbkxkSnNvbiA9IHtcbiAgICBoZWFkbGluZTogZnJvbnRtYXR0ZXIudGl0bGUsXG4gICAgZGF0ZU1vZGlmaWVkOiBkYXRlLFxuICAgIGRhdGVQdWJsaXNoZWQ6IGRhdGUsXG4gICAgaW1hZ2U6IGAke2xvY2F0aW9uLmhyZWZ9JHtmcm9udG1hdHRlci5pbWFnZX1gLFxuICAgIG1haW5FbnRpdHlPZlBhZ2U6IHtcbiAgICAgICdAdHlwZSc6ICdXZWJQYWdlJyxcbiAgICAgICdAaWQnOiBsb2NhdGlvbi5ocmVmXG4gICAgfSxcbiAgICBhdXRob3I6IHsgJ0B0eXBlJzogJ1BlcnNvbicsIG5hbWU6IGF1dGhvciB9LFxuICAgIHVybDogbG9jYXRpb24uaHJlZixcbiAgICBkZXNjcmlwdGlvbjogZXhjZXJwdCxcbiAgICAnQHR5cGUnOiAnQmxvZ1Bvc3RpbmcnLFxuICAgICdAY29udGV4dCc6ICdodHRwczovL3NjaGVtYS5vcmcnXG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSB1bmRlZmluZWQpIHJldHVybjtcblxuICAgICQoZnVuY3Rpb24gKCkge1xuICAgICAgJCgnLnBvc3QtY29udGFpbmVyIGFbZGF0YS1mb290bm90ZS1yZWZdJykuZWFjaCgoXywgaXRlbSkgPT4ge1xuICAgICAgICBjb25zdCBocmVmID0gJChpdGVtKS5hdHRyKCdocmVmJyk/LnNsaWNlKDEpO1xuICAgICAgICBjb25zdCB0ZXh0ID0gJCgnIycgKyBocmVmKVxuICAgICAgICAgIC50ZXh0KClcbiAgICAgICAgICAucmVwbGFjZSgn4oapJywgJycpO1xuXG4gICAgICAgICQoaXRlbSkuYXR0cignZGF0YS10b29sdGlwJywgdGV4dCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSwgW10pO1xuXG4gIGNvbnN0IFtwb3N0cywgc2V0UG9zdHNdID0gdXNlU3RhdGUoKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRQb3N0cyhcbiAgICAgIChkYXRhIGFzIGFueSkuYWxsTWR4LmVkZ2VzXG4gICAgICAgIC5maWx0ZXIoKGl0ZW06IGFueSkgPT4gaXRlbS5ub2RlLmZpZWxkcy5zbHVnICE9PSBmaWVsZHMuc2x1ZylcbiAgICAgICAgLnNvcnQoKCkgPT4gTWF0aC5yYW5kb20oKSAtIDAuNSlcbiAgICAgICAgLnNsaWNlKDAsIDYpXG4gICAgKTtcbiAgfSwgW10pO1xuXG4gIGNvbnN0IGRyYWZ0ID0gZnJvbnRtYXR0ZXIuZHJhZnQgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdkZXZlbG9wbWVudCc7XG5cbiAgcmV0dXJuIChcbiAgICA8RGVmYXVsdFRlbXBsYXRlPlxuICAgICAgPFNFT1xuICAgICAgICB0aXRsZT17ZnJvbnRtYXR0ZXIudGl0bGV9XG4gICAgICAgIGRlc2NyaXB0aW9uPXtleGNlcnB0fVxuICAgICAgICBtZXRhPXtbXG4gICAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogYGFydGljbGU6cHVibGlzaGVkX3RpbWVgLFxuICAgICAgICAgICAgY29udGVudDogZGF5anMoZmllbGRzLmRhdGUpLmxvY2FsZSgna28nKS5mb3JtYXQoKVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogYGltYWdlYCxcbiAgICAgICAgICAgIGNvbnRlbnQ6IGBodHRwczovL2FyeXVta2EubWUke2Zyb250bWF0dGVyLmltYWdlfWBcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHByb3BlcnR5OiBgb2c6aW1hZ2VgLFxuICAgICAgICAgICAgY29udGVudDogYGh0dHBzOi8vYXJ5dW1rYS5tZSR7ZnJvbnRtYXR0ZXIuaW1hZ2V9YFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgcHJvcGVydHk6IGBvZzppbWFnZTpzZWN1cmVfdXJsYCxcbiAgICAgICAgICAgIGNvbnRlbnQ6IGBodHRwczovL2FyeXVta2EubWUke2Zyb250bWF0dGVyLmltYWdlfWBcbiAgICAgICAgICB9XG4gICAgICAgIF19XG4gICAgICAvPlxuXG4gICAgICA8SGVsbWV0PlxuICAgICAgICA8c2NyaXB0IHR5cGU9XCJhcHBsaWNhdGlvbi9sZCtqc29uXCI+e0pTT04uc3RyaW5naWZ5KGFwcGxpY2F0aW9uTGRKc29uKX08L3NjcmlwdD5cbiAgICAgIDwvSGVsbWV0PlxuXG4gICAgICA8aDEgY2xhc3NOYW1lPVwicG9zdC10aXRsZVwiPntmcm9udG1hdHRlci50aXRsZX08L2gxPlxuXG4gICAgICA8c3BhbiBjbGFzc05hbWU9XCJwb3N0LWRhdGVcIj5Xcml0dGVuIG9uIHtkYXlqcyhmaWVsZHMuZGF0ZSkubG9jYWxlKCdlbicpLmZvcm1hdCgnTEwnKX08L3NwYW4+XG5cbiAgICAgIDxpbWcgc3JjPXtmcm9udG1hdHRlci5pbWFnZX0gc3R5bGU9e3sgb2JqZWN0Rml0OiAnY292ZXInLCBtYXhIZWlnaHQ6IDMwMCwgd2lkdGg6ICcxMDAlJyB9fSAvPlxuXG4gICAgICB7ZHJhZnQgfHwgKHRhYmxlT2ZDb250ZW50cy5pdGVtcyAmJiA8VGFibGVPZkNvbnRlbnRzIGl0ZW1zPXt0YWJsZU9mQ29udGVudHMuaXRlbXN9IC8+KX1cblxuICAgICAge2RyYWZ0IHx8XG4gICAgICAgIChzZXJpZXM/Lml0ZW1zICYmIChcbiAgICAgICAgICA8U2VyaWVzIHRpdGxlPXtzZXJpZXMudGl0bGV9IGl0ZW1zPXtzZXJpZXMuaXRlbXN9IGN1cnJlbnRJdGVtPXtmcm9udG1hdHRlci50aXRsZX0gLz5cbiAgICAgICAgKSl9XG5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicG9zdC1jb250ZW50XCI+XG4gICAgICAgIHtkcmFmdCA/IDxOb3RZZXRQdWJsaXNoZWQ+Tm90IHlldCBwdWJsaXNoZWQ8L05vdFlldFB1Ymxpc2hlZD4gOiBjaGlsZHJlbn1cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8UG9zdEZvb3RlciB0YWdzPXtmcm9udG1hdHRlci50YWdzfSBjb21tZW50PXtmcm9udG1hdHRlci5jb21tZW50c30gLz5cblxuICAgICAge3Bvc3RzICYmIDxSZWxhdGVkUG9zdCBwb3N0cz17cG9zdHN9IGN1cnJlbnQ9e2ZpZWxkcy5zbHVnfSAvPn1cbiAgICA8L0RlZmF1bHRUZW1wbGF0ZT5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFBvc3RUZW1wbGF0ZTtcblxuZXhwb3J0IGNvbnN0IHBhZ2VRdWVyeSA9IGdyYXBocWxgXG4gIHF1ZXJ5IFBvc3RCeVNsdWcoJHNsdWc6IFN0cmluZyEpIHtcbiAgICBzaXRlIHtcbiAgICAgIHNpdGVNZXRhZGF0YSB7XG4gICAgICAgIHRpdGxlXG4gICAgICB9XG4gICAgfVxuICAgIG1keChmaWVsZHM6IHsgc2x1ZzogeyBlcTogJHNsdWcgfSB9KSB7XG4gICAgICBib2R5XG4gICAgICB0YWJsZU9mQ29udGVudHNcbiAgICAgIGV4Y2VycHRcbiAgICAgIGZpZWxkcyB7XG4gICAgICAgIHNsdWdcbiAgICAgICAgZGF0ZVxuICAgICAgfVxuICAgICAgZnJvbnRtYXR0ZXIge1xuICAgICAgICB0aXRsZVxuICAgICAgICBjYXRlZ29yaWVzXG4gICAgICAgIHRhZ3NcbiAgICAgICAgaW1hZ2VcbiAgICAgICAgY29tbWVudHNcbiAgICAgICAgZHJhZnRcbiAgICAgIH1cbiAgICB9XG4gICAgYWxsTWR4KFxuICAgICAgZmlsdGVyOiB7XG4gICAgICAgIGZpZWxkczogeyB0eXBlOiB7IGVxOiBcInBvc3RcIiB9IH1cbiAgICAgICAgZnJvbnRtYXR0ZXI6IHsgZHJhZnQ6IHsgbmU6IHRydWUgfSwgaGlkZTogeyBuZTogdHJ1ZSB9IH1cbiAgICAgIH1cbiAgICApIHtcbiAgICAgIGVkZ2VzIHtcbiAgICAgICAgbm9kZSB7XG4gICAgICAgICAgZmllbGRzIHtcbiAgICAgICAgICAgIGRhdGVcbiAgICAgICAgICAgIHNsdWdcbiAgICAgICAgICB9XG4gICAgICAgICAgZnJvbnRtYXR0ZXIge1xuICAgICAgICAgICAgdGl0bGVcbiAgICAgICAgICAgIGltYWdlXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5gO1xuXG5jb25zdCBOb3RZZXRQdWJsaXNoZWQgPSBzdHlsZWQuZGl2YFxuICBtYXJnaW46IDE2cHggMDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuYDtcbiJdfQ== */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Image from '@components/Image';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    a: \"a\",\n    p: \"p\",\n    blockquote: \"blockquote\",\n    ol: \"ol\",\n    li: \"li\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, {\n    id: \"kotlin-data-class로-entity구현하기\"\n  }, React.createElement(_components.a, {\n    href: \"#kotlin-data-class로-entity구현하기\"\n  }, \"kotlin data class로 entity구현하기\")), \"\\n\", React.createElement(_components.p, null, \"Kotlin의 data class는 일단 equals(), copy(), toString() 등 기본적인 메서드들을 만들어줘서 너무 편하다. 기본적으로 immutable인 점도 좋다.\\n하지만 도메인 모델의 풍성한 로직을 표현하는데 적합할까? 그건 추후 더 복잡한 비즈니스 로직을 구현할 때 확인할 예정이다.\"), \"\\n\", React.createElement(_components.p, null, \"일단 기본적인 기능 구현 시 궁금했던 점은\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"data class의 모든 필드를 val로 정의하였을 때 더티체킹이 잘 작동할지?\"), \"\\n\", React.createElement(_components.li, null, \"id default값을 기본 0으로 생성해주는데 save 시 새로 생성해야 한다고 판단할 수 있을지? 필드값도 주입 안받으면 기본 0으로 생성되니까 문제는 없어야 맞긴 한데..\"), \"\\n\", React.createElement(_components.li, null, \"기본 equals()는 구조적인 동일성을 판단하는데 Entity의 equals와 호환이 될지\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"였다. 그래서 \", React.createElement(_components.a, {\n    href: \"https://kotest.io/\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"Kotest\"), \"로 테스트 해봤다.\"), \"\\n\", React.createElement(_components.p, null, \"코틀린 환경에서 Spring Data JPA의 save()를 테스트 하기 위해 mocking이 아닌 실제 프레임워크 테스트가 필요했다.\\nJunit에서와 마찬가지로 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">@SpringBootTest</code>\"\n    }\n  }), \" 애너테이션을 통해 스프링 빈 주입이 가능했다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"kotest\"\n  }, React.createElement(_components.a, {\n    href: \"#kotest\"\n  }, \"Kotest\")), \"\\n\", React.createElement(_components.p, null, \"다양한 테스트 스타일을 지원한다. 원하는 스타일의 Spec을 상속받아 클래스를 생성하여 사용한다.\"), \"\\n\", React.createElement(Image, {\n    src: \"https://velog.velcdn.com/images/aryumka/post/1a9143f5-c438-4cb4-88ca-628cbb13d99c/image.png\"\n  }), \"\\n\", React.createElement(_components.p, null, \"특히 BDD 스타일인 BehaviorSpec이 흥미로웠다.\\n주석으로 처리되는 given, when, then 같은 테스트 원칙들을 DSL로 코드화했다는 점이 매우 코틀린스럽다.\\nJUnit과 같은 애너테이션 스타일도 지원하지만 굳이 쓸 필요는 없어보인다.\"), \"\\n\", React.createElement(_components.p, null, \"아래는 BehaviorSpec을 상속받아 만든 테스트 예시이다. 클래스 생성자 파라미터로 코드블록을 넣으면 init\", \" 블럭에서 해당 코드블록이 실행된다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"kotlin\\\"><pre class=\\\"language-kotlin\\\"><code class=\\\"language-kotlin\\\"><span class=\\\"token keyword\\\">class</span> ProposeGenerator <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">fun</span> <span class=\\\"token function\\\">generateProposal</span><span class=\\\"token punctuation\\\">(</span>title<span class=\\\"token operator\\\">:</span> String<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> FundingProposal <span class=\\\"token operator\\\">=</span>\\n        <span class=\\\"token function\\\">FundingProposal</span><span class=\\\"token punctuation\\\">(</span>title <span class=\\\"token operator\\\">=</span> title<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">class</span> ProPoseGeneratorTest<span class=\\\"token operator\\\">:</span> <span class=\\\"token function\\\">BehaviorSpec</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">given</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서 생성기가 주어졌을 때\\\"</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">val</span> generator <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">ProposeGenerator</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n\\n        <span class=\\\"token function\\\">`when`</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서를 생성한다면\\\"</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">val</span> proposal <span class=\\\"token operator\\\">=</span> generator<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">generateProposal</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서 제목\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n\\n            <span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서는 생성된다\\\"</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                proposal<span class=\\\"token punctuation\\\">.</span>title shouldBe <span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서 제목\\\"</span></span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"뭔가 다른 처리가 필요하면 클래스 바디로 init 블록을 따로 뺄 수도 있다. Spring Data JPA가 어떻게 작동하는지 알아보기 위해서는 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">@Autowired</code>\"\n    }\n  }), \"를 통한 의존성 주입이 필요했기에 아래와 같이 작성하였다. FunSpec도 사용해봤다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"kotlin\\\"><pre class=\\\"language-kotlin\\\"><code class=\\\"language-kotlin\\\"><span class=\\\"token annotation builtin\\\">@SpringBootTest</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token function\\\">ProposeUpdateTest</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token annotation builtin\\\">@Autowired</span> <span class=\\\"token keyword\\\">private</span> <span class=\\\"token keyword\\\">val</span> repository<span class=\\\"token operator\\\">:</span> ProposalRepository<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token function\\\">FunSpec</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"token comment\\\">//    @Autowired //이런식으로는 사용할 수 없다</span>\\n<span class=\\\"token comment\\\">//    private val repository: ProposalRepository</span>\\n    <span class=\\\"token annotation builtin\\\">@Autowired</span>\\n    <span class=\\\"token keyword\\\">val</span> service <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">ProposeService</span><span class=\\\"token punctuation\\\">(</span>repository<span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">init</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">context</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"신청된 제안서가 있는 상황에서\\\"</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">val</span> proposal <span class=\\\"token operator\\\">=</span> service<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createFundingProposal</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서 제목\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"proposal: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">$</span><span class=\\\"token expression\\\">proposal</span></span><span class=\\\"token string\\\">\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n\\n            <span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서를 수정한다면\\\"</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">val</span> newTitle <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"새로운 제안서 제목\\\"</span></span>\\n                <span class=\\\"token keyword\\\">val</span> updatedProposal <span class=\\\"token operator\\\">=</span> service<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">updateFundingProposal</span><span class=\\\"token punctuation\\\">(</span>proposal<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span> newTitle<span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"updatedProposal: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">$</span><span class=\\\"token expression\\\">updatedProposal</span></span><span class=\\\"token string\\\">\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n                updatedProposal<span class=\\\"token operator\\\">!!</span><span class=\\\"token punctuation\\\">.</span>id shouldBe proposal<span class=\\\"token punctuation\\\">.</span>id\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"테스트 결과\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"immutable인 data class와 그 안의 val 속성들을 조작이 아닌 깊은 복사(=copy())했을 때 더티체킹은 작동하지 않는다. 더티체킹은 객체의 속성 단위에서 체크할 뿐 객체 reference는 작동하지 않는다고 한다. save()를 통해 persist해줘야 한다. 비즈니스로직과 프레임워크를 분리하기 위해 더티체킹을 일부러 사용하지 않기도 한다고 한다.\"), \"\\n\", React.createElement(_components.li, null, \"0도 null이라고 인식한다고 한다. 기본타입에서는 default값이 있으니까 당연히 되어야 하는게 맞다.\"), \"\\n\", React.createElement(_components.li, null, \"이건 더티체킹과 엮여서 좀 헷갈렸던 부분. EntityManager로부터 관리되지 않는 Entity들은 일단 논외. hashcode를 더 공부해야할듯.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"프레임워크가 어떻게 동작하는지 보기 위해서 어쩔수 없이 SpringBootTest를 했지만 매번 리부팅되는 걸 보면서 속이 너무나도 답답했다.\"), \"\\n\", React.createElement(_components.p, null, \"mocking은 내일하자.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_ref","src","caption","width","expandable","isExpanded","toggleExpanded","useState","___EmotionJSX","style","cursor","onClick","undefined","dangerouslySetInnerHTML","__html","ReactDOM","position","top","left","height","backgroundColor","borderRadius","maxWidth","transform","document","body","dayjs","require","PostTemplate","data","location","pageContext","children","tableOfContents","fields","frontmatter","excerpt","mdx","series","date","locale","format","applicationLdJson","headline","title","dateModified","datePublished","image","href","mainEntityOfPage","author","name","url","description","useEffect","$","each","_","item","_$$attr","attr","slice","text","replace","posts","setPosts","allMdx","edges","filter","node","slug","sort","Math","random","draft","process","DefaultTemplate","SEO","meta","content","property","Helmet","type","JSON","stringify","className","objectFit","maxHeight","items","TableOfContents","Series","currentItem","NotYetPublished","PostFooter","tags","comment","comments","RelatedPost","current","GatsbyMDXWrapper","props","React","GATSBY_COMPILED_MDX","_styled","target","styles","_createMdxContent","_components","Object","assign","h3","a","p","blockquote","ol","li","span","_provideComponents","components","id","rel","Image","wrapper","MDXLayout"],"sourceRoot":""}
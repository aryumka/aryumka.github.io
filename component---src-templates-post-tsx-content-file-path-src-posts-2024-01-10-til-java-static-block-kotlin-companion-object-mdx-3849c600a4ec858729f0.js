"use strict";(self.webpackChunkaryumka_me=self.webpackChunkaryumka_me||[]).push([[4408],{2637:function(n,s,a){a.r(s);var t=a(9128),e=a(9474);function o(n){const s=Object.assign({p:"p",span:"span"},(0,t.R)(),n.components);return e.createElement(e.Fragment,null,e.createElement(s.p,null,"RestTemplate의 코드를 보던 중 아래와 같은 문법을 발견했다."),"\n",e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="java"><pre class="language-java"><code class="language-java">\t<span class="token keyword">static</span> <span class="token punctuation">{</span>\n\t\t<span class="token class-name">ClassLoader</span> classLoader <span class="token operator">=</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tromePresent <span class="token operator">=</span> <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token string">"com.rometools.rome.feed.WireFeed"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tjaxb2Present <span class="token operator">=</span> <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token string">"javax.xml.bind.Binder"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tjackson2Present <span class="token operator">=</span> <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token string">"com.fasterxml.jackson.databind.ObjectMapper"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>\n\t\t\t\t<span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token string">"com.fasterxml.jackson.core.JsonGenerator"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tjackson2XmlPresent <span class="token operator">=</span> <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token string">"com.fasterxml.jackson.dataformat.xml.XmlMapper"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tjackson2SmilePresent <span class="token operator">=</span> <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token string">"com.fasterxml.jackson.dataformat.smile.SmileFactory"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tjackson2CborPresent <span class="token operator">=</span> <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token string">"com.fasterxml.jackson.dataformat.cbor.CBORFactory"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tgsonPresent <span class="token operator">=</span> <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token string">"com.google.gson.Gson"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tjsonbPresent <span class="token operator">=</span> <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token string">"javax.json.bind.Jsonb"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tkotlinSerializationJsonPresent <span class="token operator">=</span> <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token string">"kotlinx.serialization.json.Json"</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span></code></pre></div>'}}),"\n",e.createElement(s.p,null,"코틀린의 companion object와 비슷하게 동작할 것처럼 보여서 찾아봤다."),"\n",e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="kotlin"><pre class="language-kotlin"><code class="language-kotlin"><span class="token comment">//kotlin의 companion object 예시</span>\n<span class="token keyword">class</span> MyClass <span class="token punctuation">{</span>\n    <span class="token keyword">companion</span> <span class="token keyword">object</span> <span class="token punctuation">{</span>\n        <span class="token keyword">init</span> <span class="token punctuation">{</span>\n            <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"Inside Kotlin companion object init block"</span></span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">fun</span> <span class="token function">someFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"Inside Kotlin companion object function"</span></span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",e.createElement(s.p,null,"그러나 실제 작동방식은 다르다고 한다.\nkotlin의 companion object는 말그대로 객체이며 이는static class로 컴파일된다.\n그러나 java의 static 블록은 바로 바이트코드로 변환된다고 한다."),"\n",e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="java"><pre class="language-java"><code class="language-java"><span class="token comment">//static 블록이 변환된 바이트코드 예시</span>\n<span class="token keyword">static</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token class-name">Code</span><span class="token operator">:</span>\n       <span class="token number">0</span><span class="token operator">:</span> ldc           #<span class="token number">2</span>    <span class="token comment">// String Inside Java static block</span>\n       <span class="token number">2</span><span class="token operator">:</span> invokestatic  #<span class="token number">3</span>    <span class="token comment">// Method java/lang/System.out.println:(Ljava/lang/String;)V</span>\n       <span class="token number">5</span><span class="token operator">:</span> <span class="token keyword">return</span></code></pre></div>'}}))}s.default=function(n){void 0===n&&(n={});const{wrapper:s}=Object.assign({},(0,t.R)(),n.components);return s?e.createElement(s,n,e.createElement(o,n)):o(n)}},5906:function(n,s,a){a.r(s),a.d(s,{default:function(){return b}});var t=a(2637),e=a(5530),o=a(9474),p=a(8844),c=a(1047),l=a(8928),i=a.n(l),u=a(3893),r=a(2887),k=a(5909),m=a(589),d=a(5181),g=a.n(d),f=a(2195),h=a(6810);i().extend(a(1997));const y=n=>{let{data:s,location:a,pageContext:t,children:e}=n;const{tableOfContents:l,fields:d,frontmatter:y,excerpt:b}=s.mdx,{series:v}=t,P=i()(d.date).locale("ko").format(),x={headline:y.title,dateModified:P,datePublished:P,image:""+a.href+y.image,mainEntityOfPage:{"@type":"WebPage","@id":a.href},author:{"@type":"Person",name:"Lee Sun-Hyoup"},url:a.href,description:b,"@type":"BlogPosting","@context":"https://schema.org"};(0,o.useEffect)((()=>{void 0!==typeof document&&g()((function(){g()(".post-container a[data-footnote-ref]").each(((n,s)=>{var a;const t=null===(a=g()(s).attr("href"))||void 0===a?void 0:a.slice(1),e=g()("#"+t).text().replace("↩","");g()(s).attr("data-tooltip",e)}))}))}),[]);const{0:C,1:L}=(0,o.useState)();(0,o.useEffect)((()=>{L(s.allMdx.edges.filter((n=>n.node.fields.slug!==d.slug)).sort((()=>Math.random()-.5)).slice(0,6))}),[]);const w=y.draft&&!0;return(0,h.Y)(p.A,null,(0,h.Y)(c.A,{title:y.title,description:b,meta:[{name:"article:published_time",content:i()(d.date).locale("ko").format()},{name:"image",content:"https://aryumka.me"+y.image},{property:"og:image",content:"https://aryumka.me"+y.image},{property:"og:image:secure_url",content:"https://aryumka.me"+y.image}]}),(0,h.Y)(m.m,null,(0,h.Y)("script",{type:"application/ld+json"},JSON.stringify(x))),(0,h.Y)("h1",{className:"post-title"},y.title),(0,h.Y)("span",{className:"post-date"},"Written on ",i()(d.date).locale("en").format("LL")),(0,h.Y)("img",{src:y.image,style:{objectFit:"cover",maxHeight:300,width:"100%"}}),w||l.items&&(0,h.Y)(k.A,{items:l.items}),w||(null==v?void 0:v.items)&&(0,h.Y)(f.A,{title:v.title,items:v.items,currentItem:y.title}),(0,h.Y)("div",{className:"post-content"},w?(0,h.Y)(j,null,"Not yet published"):e),(0,h.Y)(u.A,{tags:y.tags,comment:y.comments}),C&&(0,h.Y)(r.A,{posts:C,current:d.slug}))};function b(n){return o.createElement(y,n,o.createElement(t.default,n))}const j=(0,e.A)("div",{target:"ezegrm70"})({name:"xl5zip",styles:"margin:16px 0;font-weight:bold;font-size:20px;text-align:center"})}}]);
//# sourceMappingURL=component---src-templates-post-tsx-content-file-path-src-posts-2024-01-10-til-java-static-block-kotlin-companion-object-mdx-3849c600a4ec858729f0.js.map
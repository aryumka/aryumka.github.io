{"version":3,"file":"component---src-templates-post-tsx-content-file-path-src-posts-2023-12-29-holiday-til-2-mdx-b4932b227764895378aa.js","mappings":"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","sources":["webpack://aryumka.me/./src/components/Image/index.tsx","webpack://aryumka.me/./src/posts/2023-12-29-holiday-til-2.mdx","webpack://aryumka.me/./src/templates/post.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface ImageProps {\n  src: string;\n  caption?: string;\n  width?: number;\n  expandable?: boolean;\n}\n\nconst Image = ({ src, caption, width, expandable }: ImageProps) => {\n  const [isExpanded, toggleExpanded] = useState(false);\n\n  return (\n    <figure>\n      <img\n        src={src}\n        width={width}\n        style={{ cursor: expandable ? 'zoom-in' : 'default' }}\n        onClick={expandable ? () => toggleExpanded(true) : undefined}\n      />\n      {caption && <figcaption dangerouslySetInnerHTML={{ __html: caption }} />}\n      {isExpanded &&\n        ReactDOM.createPortal(\n          <div\n            style={{\n              position: 'fixed',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              cursor: 'zoom-out',\n              backgroundColor: 'rgba(0, 0, 0, 0.7)'\n            }}\n            onClick={() => toggleExpanded(false)}\n          >\n            <div\n              style={{\n                borderRadius: 8,\n                maxWidth: 1200,\n                width: '80%',\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: 'white'\n              }}\n            >\n              <img src={src} width=\"100%\" />\n            </div>\n          </div>,\n          document.body\n        )}\n    </figure>\n  );\n};\n\nexport default Image;\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Image from '@components/Image';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    a: \"a\",\n    p: \"p\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, {\n    id: \"github-action---ci\"\n  }, React.createElement(_components.a, {\n    href: \"#github-action---ci\"\n  }, \"Github Action - CI\")), \"\\n\", React.createElement(_components.p, null, \"깃허브에서 제공하는 CI/CD 툴이다.\\n공식홈페이지에 아주 자세한 설명이 나와있다. 사용방법은 매우 쉽다. 하고 싶은 작업과 조건들을 스크립트에 작성만 해주면 된다.\\n스크립트 템플릿도 바로 깃헙에서 만들 수 있다. 거기서 원하는 부분만 고쳐서 쓰면 된다.\\n일단 내 목적은 테스트 통과, build 통과였다. 자동생성된 템플릿에서 자바 버젼을 수정해주고 테스트를 추가해준다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"yaml\\\"><pre class=\\\"language-yaml\\\"><code class=\\\"language-yaml\\\">      <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token key atrule\\\">name</span><span class=\\\"token punctuation\\\">:</span> Set up JDK 19\\n        <span class=\\\"token key atrule\\\">uses</span><span class=\\\"token punctuation\\\">:</span> actions/setup<span class=\\\"token punctuation\\\">-</span>java@v1\\n        <span class=\\\"token key atrule\\\">with</span><span class=\\\"token punctuation\\\">:</span>\\n          <span class=\\\"token key atrule\\\">java-version</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">19</span>\\n\\n      <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token key atrule\\\">name</span><span class=\\\"token punctuation\\\">:</span> run tests\\n        <span class=\\\"token key atrule\\\">run</span><span class=\\\"token punctuation\\\">:</span> ./gradlew test</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"이렇게 처음 테스트를 실행할 때 ./gradlew 실행이 실패했다. 원인은 접근권한이 없다는 것.\"), \"\\n\", React.createElement(Image, {\n    src: \"https://velog.velcdn.com/images/aryumka/post/e6075269-05de-4e29-9193-98f4c4bee66c/image.png\"\n  }), \"\\n\", React.createElement(_components.p, null, \"그래서 권한 부여 커맨드를 스텝에 추가해주었다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"yaml\\\"><pre class=\\\"language-yaml\\\"><code class=\\\"language-yaml\\\">      <span class=\\\"token comment\\\"># Runs a single command using the runners shell</span>\\n      <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token key atrule\\\">name</span><span class=\\\"token punctuation\\\">:</span> Run a one<span class=\\\"token punctuation\\\">-</span>line script\\n        <span class=\\\"token key atrule\\\">run</span><span class=\\\"token punctuation\\\">:</span> chmod +x gradlew</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"깃헙에서 제공하는 가상머신 위에서 동작하기 때문에 매번 실행해주어야 할 것 같다.\\n공식 문서에 따르면 \", React.createElement(_components.a, {\n    href: \"https://docs.github.com/ko/actions/learn-github-actions/understanding-github-actions#runners\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"직접 자신의 runner를 호스팅\"), \"할 수도 있다고 한다.\"), \"\\n\", React.createElement(_components.p, null, \"빌드가 잘 된다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"mockk\"\n  }, React.createElement(_components.a, {\n    href: \"#mockk\"\n  }, \"Mockk\")), \"\\n\", React.createElement(_components.p, null, \"mockito보다 코틀린에 더 적합하다고 평가받는 mocking 라이브러리다.\\n\", React.createElement(_components.a, {\n    href: \"https://spring.io/guides/tutorials/spring-boot-kotlin/\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"스프링 공식 가이드문서\"), \"에 나온다.\\n위의 예시대로 스프링 환경에서 지원되는 버젼이 있어서 kotest와 섞어서 써보려고 했는데.. 잘 안된다.. 어디가 문젠지 모르겠다.\\n내일 다시 해봐야겠다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"kotlin\\\"><pre class=\\\"language-kotlin\\\"><code class=\\\"language-kotlin\\\"><span class=\\\"token annotation builtin\\\">@WebMvcTest</span><span class=\\\"token punctuation\\\">(</span>ProposeController<span class=\\\"token operator\\\">::</span><span class=\\\"token keyword\\\">class</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token annotation builtin\\\">@AutoConfigureMockMvc</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token function\\\">ProposeUpdateTestGpt</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token annotation builtin\\\">@Autowired</span> <span class=\\\"token keyword\\\">val</span> mockMvc<span class=\\\"token operator\\\">:</span> MockMvc<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token function\\\">FunSpec</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n    <span class=\\\"token annotation builtin\\\">@MockkBean</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token keyword\\\">lateinit</span> <span class=\\\"token keyword\\\">var</span> service<span class=\\\"token operator\\\">:</span> ProposeService\\n\\n    <span class=\\\"token keyword\\\">init</span> <span class=\\\"token punctuation\\\">{</span>\\n        beforeTest <span class=\\\"token punctuation\\\">{</span>\\n            service <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">mockk</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n            every <span class=\\\"token punctuation\\\">{</span> service<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createFundingProposal</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">any</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">}</span> returns <span class=\\\"token function\\\">FundingProposal</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1L</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서 제목\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n            every <span class=\\\"token punctuation\\\">{</span> service<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">updateFundingProposal</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">any</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token function\\\">any</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">}</span> returns <span class=\\\"token function\\\">FundingProposal</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1L</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"새로운 제안서 제목\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서 생성\\\"</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">val</span> expectedId <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1L</span>\\n            <span class=\\\"token keyword\\\">val</span> expectedTitle <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서 제목\\\"</span></span>\\n\\n            mockMvc<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">perform</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">post</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"/fundMng/proposal/create\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">content</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서 제목\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">contentType</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"text/plain\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">andExpect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">status</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>isOk<span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">andExpect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">jsonPath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"$.id\\\"</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">value</span><span class=\\\"token punctuation\\\">(</span>expectedId<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">andExpect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">jsonPath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"$.title\\\"</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">value</span><span class=\\\"token punctuation\\\">(</span>expectedTitle<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서 수정\\\"</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">val</span> proposalId <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span>\\n            <span class=\\\"token keyword\\\">val</span> newTitle <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"새로운 제안서 제목\\\"</span></span>\\n            <span class=\\\"token keyword\\\">val</span> expectedId <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1L</span>\\n            <span class=\\\"token keyword\\\">val</span> expectedTitle <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"새로운 제안서 제목\\\"</span></span>\\n\\n            mockMvc<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">perform</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">put</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"/fundMng/proposal/1\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">content</span><span class=\\\"token punctuation\\\">(</span>newTitle<span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">contentType</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"text/plain\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">andExpect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">status</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>isOk<span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">andExpect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">jsonPath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"$.id\\\"</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">value</span><span class=\\\"token punctuation\\\">(</span>expectedId<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">andExpect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">jsonPath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"$.title\\\"</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">value</span><span class=\\\"token punctuation\\\">(</span>expectedTitle<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/aryumka.github.io/aryumka.github.io/src/posts/2023-12-29-holiday-til-2.mdx\";\nimport _styled from \"@emotion/styled/base\";\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n}\nimport React from 'react';\nimport DefaultTemplate from '@templates/default';\nimport SEO from '@components/SEO';\nimport dayjs from 'dayjs';\nimport PostFooter from '@components/PostFooter';\nimport RelatedPost from '@components/RelatedPost';\nimport TableOfContents from '@components/TableOfContents';\nimport {Helmet} from 'react-helmet';\nimport $ from 'jquery';\nimport {useEffect} from 'react';\nimport {useState} from 'react';\nimport Series from '@components/Series';\nimport {jsx as ___EmotionJSX} from \"@emotion/react\";\ndayjs.extend(require('dayjs/plugin/localizedFormat'));\nconst PostTemplate = _ref => {\n  let {data, location, pageContext, children} = _ref;\n  const {tableOfContents, fields, frontmatter, excerpt} = data.mdx;\n  const {series} = pageContext;\n  const author = 'Lee Sun-Hyoup';\n  const date = dayjs(fields.date).locale('ko').format();\n  const applicationLdJson = {\n    headline: frontmatter.title,\n    dateModified: date,\n    datePublished: date,\n    image: `${location.href}${frontmatter.image}`,\n    mainEntityOfPage: {\n      '@type': 'WebPage',\n      '@id': location.href\n    },\n    author: {\n      '@type': 'Person',\n      name: author\n    },\n    url: location.href,\n    description: excerpt,\n    '@type': 'BlogPosting',\n    '@context': 'https://schema.org'\n  };\n  useEffect(() => {\n    if (typeof document === undefined) return;\n    $(function () {\n      $('.post-container a[data-footnote-ref]').each((_, item) => {\n        var _$$attr;\n        const href = (_$$attr = $(item).attr('href')) === null || _$$attr === void 0 ? void 0 : _$$attr.slice(1);\n        const text = $('#' + href).text().replace('↩', '');\n        $(item).attr('data-tooltip', text);\n      });\n    });\n  }, []);\n  const {0: posts, 1: setPosts} = useState();\n  useEffect(() => {\n    setPosts(data.allMdx.edges.filter(item => item.node.fields.slug !== fields.slug).sort(() => Math.random() - 0.5).slice(0, 6));\n  }, []);\n  const draft = frontmatter.draft && process.env.NODE_ENV !== 'development';\n  return ___EmotionJSX(DefaultTemplate, null, ___EmotionJSX(SEO, {\n    title: frontmatter.title,\n    description: excerpt,\n    meta: [{\n      name: `article:published_time`,\n      content: dayjs(fields.date).locale('ko').format()\n    }, {\n      name: `image`,\n      content: `https://aryumka.me${frontmatter.image}`\n    }, {\n      property: `og:image`,\n      content: `https://aryumka.me${frontmatter.image}`\n    }, {\n      property: `og:image:secure_url`,\n      content: `https://aryumka.me${frontmatter.image}`\n    }]\n  }), ___EmotionJSX(Helmet, null, ___EmotionJSX(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(applicationLdJson))), ___EmotionJSX(\"h1\", {\n    className: \"post-title\"\n  }, frontmatter.title), ___EmotionJSX(\"span\", {\n    className: \"post-date\"\n  }, \"Written on \", dayjs(fields.date).locale('en').format('LL')), ___EmotionJSX(\"img\", {\n    src: frontmatter.image,\n    style: {\n      objectFit: 'cover',\n      maxHeight: 300,\n      width: '100%'\n    }\n  }), draft || tableOfContents.items && ___EmotionJSX(TableOfContents, {\n    items: tableOfContents.items\n  }), draft || (series === null || series === void 0 ? void 0 : series.items) && ___EmotionJSX(Series, {\n    title: series.title,\n    items: series.items,\n    currentItem: frontmatter.title\n  }), ___EmotionJSX(\"div\", {\n    className: \"post-content\"\n  }, draft ? ___EmotionJSX(NotYetPublished, null, \"Not yet published\") : children), ___EmotionJSX(PostFooter, {\n    tags: frontmatter.tags,\n    comment: frontmatter.comments\n  }), posts && ___EmotionJSX(RelatedPost, {\n    posts: posts,\n    current: fields.slug\n  }));\n};\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"2550809065\";\nconst NotYetPublished = _styled(\"div\", process.env.NODE_ENV === \"production\" ? {\n  target: \"ezegrm70\"\n} : {\n  target: \"ezegrm70\",\n  label: \"NotYetPublished\"\n})(process.env.NODE_ENV === \"production\" ? {\n  name: \"xl5zip\",\n  styles: \"margin:16px 0;font-weight:bold;font-size:20px;text-align:center\"\n} : {\n  name: \"xl5zip\",\n  styles: \"margin:16px 0;font-weight:bold;font-size:20px;text-align:center/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2FyeXVta2EuZ2l0aHViLmlvL2FyeXVta2EuZ2l0aHViLmlvL3NyYy90ZW1wbGF0ZXMvcG9zdC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0trQyIsImZpbGUiOiIvaG9tZS9ydW5uZXIvd29yay9hcnl1bWthLmdpdGh1Yi5pby9hcnl1bWthLmdpdGh1Yi5pby9zcmMvdGVtcGxhdGVzL3Bvc3QudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUxheW91dEVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGdyYXBocWwsIFBhZ2VQcm9wcywgdXNlU3RhdGljUXVlcnkgfSBmcm9tICdnYXRzYnknO1xuaW1wb3J0IERlZmF1bHRUZW1wbGF0ZSBmcm9tICdAdGVtcGxhdGVzL2RlZmF1bHQnO1xuaW1wb3J0IFNFTyBmcm9tICdAY29tcG9uZW50cy9TRU8nO1xuaW1wb3J0IGRheWpzIGZyb20gJ2RheWpzJztcbmltcG9ydCBQb3N0Rm9vdGVyIGZyb20gJ0Bjb21wb25lbnRzL1Bvc3RGb290ZXInO1xuaW1wb3J0IFJlbGF0ZWRQb3N0IGZyb20gJ0Bjb21wb25lbnRzL1JlbGF0ZWRQb3N0JztcbmltcG9ydCBUYWJsZU9mQ29udGVudHMgZnJvbSAnQGNvbXBvbmVudHMvVGFibGVPZkNvbnRlbnRzJztcbmltcG9ydCB7IEhlbG1ldCB9IGZyb20gJ3JlYWN0LWhlbG1ldCc7XG5pbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgU2VyaWVzIGZyb20gJ0Bjb21wb25lbnRzL1Nlcmllcyc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5cbmRheWpzLmV4dGVuZChyZXF1aXJlKCdkYXlqcy9wbHVnaW4vbG9jYWxpemVkRm9ybWF0JykpO1xuXG5jb25zdCBQb3N0VGVtcGxhdGUgPSAoeyBkYXRhLCBsb2NhdGlvbiwgcGFnZUNvbnRleHQsIGNoaWxkcmVuIH06IFBhZ2VQcm9wcykgPT4ge1xuICBjb25zdCB7IHRhYmxlT2ZDb250ZW50cywgZmllbGRzLCBmcm9udG1hdHRlciwgZXhjZXJwdCB9ID0gKGRhdGEgYXMgYW55KS5tZHg7XG5cbiAgY29uc3QgeyBzZXJpZXMgfSA9IHBhZ2VDb250ZXh0IGFzIGFueTtcblxuICBjb25zdCBhdXRob3IgPSAnTGVlIFN1bi1IeW91cCc7XG4gIGNvbnN0IGRhdGUgPSBkYXlqcyhmaWVsZHMuZGF0ZSkubG9jYWxlKCdrbycpLmZvcm1hdCgpO1xuICBjb25zdCBhcHBsaWNhdGlvbkxkSnNvbiA9IHtcbiAgICBoZWFkbGluZTogZnJvbnRtYXR0ZXIudGl0bGUsXG4gICAgZGF0ZU1vZGlmaWVkOiBkYXRlLFxuICAgIGRhdGVQdWJsaXNoZWQ6IGRhdGUsXG4gICAgaW1hZ2U6IGAke2xvY2F0aW9uLmhyZWZ9JHtmcm9udG1hdHRlci5pbWFnZX1gLFxuICAgIG1haW5FbnRpdHlPZlBhZ2U6IHtcbiAgICAgICdAdHlwZSc6ICdXZWJQYWdlJyxcbiAgICAgICdAaWQnOiBsb2NhdGlvbi5ocmVmXG4gICAgfSxcbiAgICBhdXRob3I6IHsgJ0B0eXBlJzogJ1BlcnNvbicsIG5hbWU6IGF1dGhvciB9LFxuICAgIHVybDogbG9jYXRpb24uaHJlZixcbiAgICBkZXNjcmlwdGlvbjogZXhjZXJwdCxcbiAgICAnQHR5cGUnOiAnQmxvZ1Bvc3RpbmcnLFxuICAgICdAY29udGV4dCc6ICdodHRwczovL3NjaGVtYS5vcmcnXG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSB1bmRlZmluZWQpIHJldHVybjtcblxuICAgICQoZnVuY3Rpb24gKCkge1xuICAgICAgJCgnLnBvc3QtY29udGFpbmVyIGFbZGF0YS1mb290bm90ZS1yZWZdJykuZWFjaCgoXywgaXRlbSkgPT4ge1xuICAgICAgICBjb25zdCBocmVmID0gJChpdGVtKS5hdHRyKCdocmVmJyk/LnNsaWNlKDEpO1xuICAgICAgICBjb25zdCB0ZXh0ID0gJCgnIycgKyBocmVmKVxuICAgICAgICAgIC50ZXh0KClcbiAgICAgICAgICAucmVwbGFjZSgn4oapJywgJycpO1xuXG4gICAgICAgICQoaXRlbSkuYXR0cignZGF0YS10b29sdGlwJywgdGV4dCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSwgW10pO1xuXG4gIGNvbnN0IFtwb3N0cywgc2V0UG9zdHNdID0gdXNlU3RhdGUoKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRQb3N0cyhcbiAgICAgIChkYXRhIGFzIGFueSkuYWxsTWR4LmVkZ2VzXG4gICAgICAgIC5maWx0ZXIoKGl0ZW06IGFueSkgPT4gaXRlbS5ub2RlLmZpZWxkcy5zbHVnICE9PSBmaWVsZHMuc2x1ZylcbiAgICAgICAgLnNvcnQoKCkgPT4gTWF0aC5yYW5kb20oKSAtIDAuNSlcbiAgICAgICAgLnNsaWNlKDAsIDYpXG4gICAgKTtcbiAgfSwgW10pO1xuXG4gIGNvbnN0IGRyYWZ0ID0gZnJvbnRtYXR0ZXIuZHJhZnQgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdkZXZlbG9wbWVudCc7XG5cbiAgcmV0dXJuIChcbiAgICA8RGVmYXVsdFRlbXBsYXRlPlxuICAgICAgPFNFT1xuICAgICAgICB0aXRsZT17ZnJvbnRtYXR0ZXIudGl0bGV9XG4gICAgICAgIGRlc2NyaXB0aW9uPXtleGNlcnB0fVxuICAgICAgICBtZXRhPXtbXG4gICAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogYGFydGljbGU6cHVibGlzaGVkX3RpbWVgLFxuICAgICAgICAgICAgY29udGVudDogZGF5anMoZmllbGRzLmRhdGUpLmxvY2FsZSgna28nKS5mb3JtYXQoKVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogYGltYWdlYCxcbiAgICAgICAgICAgIGNvbnRlbnQ6IGBodHRwczovL2FyeXVta2EubWUke2Zyb250bWF0dGVyLmltYWdlfWBcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHByb3BlcnR5OiBgb2c6aW1hZ2VgLFxuICAgICAgICAgICAgY29udGVudDogYGh0dHBzOi8vYXJ5dW1rYS5tZSR7ZnJvbnRtYXR0ZXIuaW1hZ2V9YFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgcHJvcGVydHk6IGBvZzppbWFnZTpzZWN1cmVfdXJsYCxcbiAgICAgICAgICAgIGNvbnRlbnQ6IGBodHRwczovL2FyeXVta2EubWUke2Zyb250bWF0dGVyLmltYWdlfWBcbiAgICAgICAgICB9XG4gICAgICAgIF19XG4gICAgICAvPlxuXG4gICAgICA8SGVsbWV0PlxuICAgICAgICA8c2NyaXB0IHR5cGU9XCJhcHBsaWNhdGlvbi9sZCtqc29uXCI+e0pTT04uc3RyaW5naWZ5KGFwcGxpY2F0aW9uTGRKc29uKX08L3NjcmlwdD5cbiAgICAgIDwvSGVsbWV0PlxuXG4gICAgICA8aDEgY2xhc3NOYW1lPVwicG9zdC10aXRsZVwiPntmcm9udG1hdHRlci50aXRsZX08L2gxPlxuXG4gICAgICA8c3BhbiBjbGFzc05hbWU9XCJwb3N0LWRhdGVcIj5Xcml0dGVuIG9uIHtkYXlqcyhmaWVsZHMuZGF0ZSkubG9jYWxlKCdlbicpLmZvcm1hdCgnTEwnKX08L3NwYW4+XG5cbiAgICAgIDxpbWcgc3JjPXtmcm9udG1hdHRlci5pbWFnZX0gc3R5bGU9e3sgb2JqZWN0Rml0OiAnY292ZXInLCBtYXhIZWlnaHQ6IDMwMCwgd2lkdGg6ICcxMDAlJyB9fSAvPlxuXG4gICAgICB7ZHJhZnQgfHwgKHRhYmxlT2ZDb250ZW50cy5pdGVtcyAmJiA8VGFibGVPZkNvbnRlbnRzIGl0ZW1zPXt0YWJsZU9mQ29udGVudHMuaXRlbXN9IC8+KX1cblxuICAgICAge2RyYWZ0IHx8XG4gICAgICAgIChzZXJpZXM/Lml0ZW1zICYmIChcbiAgICAgICAgICA8U2VyaWVzIHRpdGxlPXtzZXJpZXMudGl0bGV9IGl0ZW1zPXtzZXJpZXMuaXRlbXN9IGN1cnJlbnRJdGVtPXtmcm9udG1hdHRlci50aXRsZX0gLz5cbiAgICAgICAgKSl9XG5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicG9zdC1jb250ZW50XCI+XG4gICAgICAgIHtkcmFmdCA/IDxOb3RZZXRQdWJsaXNoZWQ+Tm90IHlldCBwdWJsaXNoZWQ8L05vdFlldFB1Ymxpc2hlZD4gOiBjaGlsZHJlbn1cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8UG9zdEZvb3RlciB0YWdzPXtmcm9udG1hdHRlci50YWdzfSBjb21tZW50PXtmcm9udG1hdHRlci5jb21tZW50c30gLz5cblxuICAgICAge3Bvc3RzICYmIDxSZWxhdGVkUG9zdCBwb3N0cz17cG9zdHN9IGN1cnJlbnQ9e2ZpZWxkcy5zbHVnfSAvPn1cbiAgICA8L0RlZmF1bHRUZW1wbGF0ZT5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFBvc3RUZW1wbGF0ZTtcblxuZXhwb3J0IGNvbnN0IHBhZ2VRdWVyeSA9IGdyYXBocWxgXG4gIHF1ZXJ5IFBvc3RCeVNsdWcoJHNsdWc6IFN0cmluZyEpIHtcbiAgICBzaXRlIHtcbiAgICAgIHNpdGVNZXRhZGF0YSB7XG4gICAgICAgIHRpdGxlXG4gICAgICB9XG4gICAgfVxuICAgIG1keChmaWVsZHM6IHsgc2x1ZzogeyBlcTogJHNsdWcgfSB9KSB7XG4gICAgICBib2R5XG4gICAgICB0YWJsZU9mQ29udGVudHNcbiAgICAgIGV4Y2VycHRcbiAgICAgIGZpZWxkcyB7XG4gICAgICAgIHNsdWdcbiAgICAgICAgZGF0ZVxuICAgICAgfVxuICAgICAgZnJvbnRtYXR0ZXIge1xuICAgICAgICB0aXRsZVxuICAgICAgICBjYXRlZ29yaWVzXG4gICAgICAgIHRhZ3NcbiAgICAgICAgaW1hZ2VcbiAgICAgICAgY29tbWVudHNcbiAgICAgICAgZHJhZnRcbiAgICAgIH1cbiAgICB9XG4gICAgYWxsTWR4KFxuICAgICAgZmlsdGVyOiB7XG4gICAgICAgIGZpZWxkczogeyB0eXBlOiB7IGVxOiBcInBvc3RcIiB9IH1cbiAgICAgICAgZnJvbnRtYXR0ZXI6IHsgZHJhZnQ6IHsgbmU6IHRydWUgfSwgaGlkZTogeyBuZTogdHJ1ZSB9IH1cbiAgICAgIH1cbiAgICApIHtcbiAgICAgIGVkZ2VzIHtcbiAgICAgICAgbm9kZSB7XG4gICAgICAgICAgZmllbGRzIHtcbiAgICAgICAgICAgIGRhdGVcbiAgICAgICAgICAgIHNsdWdcbiAgICAgICAgICB9XG4gICAgICAgICAgZnJvbnRtYXR0ZXIge1xuICAgICAgICAgICAgdGl0bGVcbiAgICAgICAgICAgIGltYWdlXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5gO1xuXG5jb25zdCBOb3RZZXRQdWJsaXNoZWQgPSBzdHlsZWQuZGl2YFxuICBtYXJnaW46IDE2cHggMDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuYDtcbiJdfQ== */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n"],"names":["_ref","src","caption","width","expandable","isExpanded","toggleExpanded","useState","___EmotionJSX","style","cursor","onClick","undefined","dangerouslySetInnerHTML","__html","ReactDOM","position","top","left","height","backgroundColor","borderRadius","maxWidth","transform","document","body","_createMdxContent","props","_components","Object","assign","h3","a","p","span","_provideComponents","components","React","id","href","Image","rel","wrapper","MDXLayout","dayjs","require","PostTemplate","data","location","pageContext","children","tableOfContents","fields","frontmatter","excerpt","mdx","series","date","locale","format","applicationLdJson","headline","title","dateModified","datePublished","image","mainEntityOfPage","author","name","url","description","useEffect","$","each","_","item","_$$attr","attr","slice","text","replace","posts","setPosts","allMdx","edges","filter","node","slug","sort","Math","random","draft","process","DefaultTemplate","SEO","meta","content","property","Helmet","type","JSON","stringify","className","objectFit","maxHeight","items","TableOfContents","Series","currentItem","NotYetPublished","PostFooter","tags","comment","comments","RelatedPost","current","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","_styled","target","styles"],"sourceRoot":""}
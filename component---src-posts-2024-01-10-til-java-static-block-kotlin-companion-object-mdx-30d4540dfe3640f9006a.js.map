{"version":3,"file":"component---src-posts-2024-01-10-til-java-static-block-kotlin-companion-object-mdx-30d4540dfe3640f9006a.js","mappings":"qLAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,KAAM,SACLC,EAAAA,EAAAA,KAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,2CAA4C,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CAChLI,wBAAyB,CACvBC,OAAQ,+6JAER,KAAMF,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,iDAAkD,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CAC/II,wBAAyB,CACvBC,OAAQ,+6CAER,KAAMF,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,+HAAgI,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CAC7NI,wBAAyB,CACvBC,OAAQ,u+BAGd,CAKA,UAJA,SAAoBV,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,KAAsBN,EAAMO,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWZ,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,C,qECEA,MAAMa,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBR,GAC/B,MAAMS,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfP,EACFA,EAAWS,GAGb,IAAIA,KAAsBT,EACnC,GACA,CAACS,EAAmBT,GAExB,C","sources":["webpack://aryumka.me/./src/posts/2024-01-10-til-java-static-block-kotlin-companion-object.mdx","webpack://aryumka.me/./node_modules/.pnpm/@mdx-js+react@3.0.1_@types+react@18.2.79_react@18.2.0/node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"RestTemplate의 코드를 보던 중 아래와 같은 문법을 발견했다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"java\\\"><pre class=\\\"language-java\\\"><code class=\\\"language-java\\\">\\t<span class=\\\"token keyword\\\">static</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t<span class=\\\"token class-name\\\">ClassLoader</span> classLoader <span class=\\\"token operator\\\">=</span> <span class=\\\"token class-name\\\">RestTemplate</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">class</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getClassLoader</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\tromePresent <span class=\\\"token operator\\\">=</span> <span class=\\\"token class-name\\\">ClassUtils</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">isPresent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"com.rometools.rome.feed.WireFeed\\\"</span><span class=\\\"token punctuation\\\">,</span> classLoader<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\tjaxb2Present <span class=\\\"token operator\\\">=</span> <span class=\\\"token class-name\\\">ClassUtils</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">isPresent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"javax.xml.bind.Binder\\\"</span><span class=\\\"token punctuation\\\">,</span> classLoader<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\tjackson2Present <span class=\\\"token operator\\\">=</span> <span class=\\\"token class-name\\\">ClassUtils</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">isPresent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"com.fasterxml.jackson.databind.ObjectMapper\\\"</span><span class=\\\"token punctuation\\\">,</span> classLoader<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">&amp;&amp;</span>\\n\\t\\t\\t\\t<span class=\\\"token class-name\\\">ClassUtils</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">isPresent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"com.fasterxml.jackson.core.JsonGenerator\\\"</span><span class=\\\"token punctuation\\\">,</span> classLoader<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\tjackson2XmlPresent <span class=\\\"token operator\\\">=</span> <span class=\\\"token class-name\\\">ClassUtils</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">isPresent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"com.fasterxml.jackson.dataformat.xml.XmlMapper\\\"</span><span class=\\\"token punctuation\\\">,</span> classLoader<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\tjackson2SmilePresent <span class=\\\"token operator\\\">=</span> <span class=\\\"token class-name\\\">ClassUtils</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">isPresent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"com.fasterxml.jackson.dataformat.smile.SmileFactory\\\"</span><span class=\\\"token punctuation\\\">,</span> classLoader<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\tjackson2CborPresent <span class=\\\"token operator\\\">=</span> <span class=\\\"token class-name\\\">ClassUtils</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">isPresent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"com.fasterxml.jackson.dataformat.cbor.CBORFactory\\\"</span><span class=\\\"token punctuation\\\">,</span> classLoader<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\tgsonPresent <span class=\\\"token operator\\\">=</span> <span class=\\\"token class-name\\\">ClassUtils</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">isPresent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"com.google.gson.Gson\\\"</span><span class=\\\"token punctuation\\\">,</span> classLoader<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\tjsonbPresent <span class=\\\"token operator\\\">=</span> <span class=\\\"token class-name\\\">ClassUtils</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">isPresent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"javax.json.bind.Jsonb\\\"</span><span class=\\\"token punctuation\\\">,</span> classLoader<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t\\tkotlinSerializationJsonPresent <span class=\\\"token operator\\\">=</span> <span class=\\\"token class-name\\\">ClassUtils</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">isPresent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"kotlinx.serialization.json.Json\\\"</span><span class=\\\"token punctuation\\\">,</span> classLoader<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"코틀린의 companion object와 비슷하게 동작할 것처럼 보여서 찾아봤다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"kotlin\\\"><pre class=\\\"language-kotlin\\\"><code class=\\\"language-kotlin\\\"><span class=\\\"token comment\\\">//kotlin의 companion object 예시</span>\\n<span class=\\\"token keyword\\\">class</span> MyClass <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">companion</span> <span class=\\\"token keyword\\\">object</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">init</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"Inside Kotlin companion object init block\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token keyword\\\">fun</span> <span class=\\\"token function\\\">someFunction</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"Inside Kotlin companion object function\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"그러나 실제 작동방식은 다르다고 한다.\\nkotlin의 companion object는 말그대로 객체이며 이는static class로 컴파일된다.\\n그러나 java의 static 블록은 바로 바이트코드로 변환된다고 한다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"java\\\"><pre class=\\\"language-java\\\"><code class=\\\"language-java\\\"><span class=\\\"token comment\\\">//static 블록이 변환된 바이트코드 예시</span>\\n<span class=\\\"token keyword\\\">static</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token class-name\\\">Code</span><span class=\\\"token operator\\\">:</span>\\n       <span class=\\\"token number\\\">0</span><span class=\\\"token operator\\\">:</span> ldc           #<span class=\\\"token number\\\">2</span>    <span class=\\\"token comment\\\">// String Inside Java static block</span>\\n       <span class=\\\"token number\\\">2</span><span class=\\\"token operator\\\">:</span> invokestatic  #<span class=\\\"token number\\\">3</span>    <span class=\\\"token comment\\\">// Method java/lang/System.out.println:(Ljava/lang/String;)V</span>\\n       <span class=\\\"token number\\\">5</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">return</span></code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}
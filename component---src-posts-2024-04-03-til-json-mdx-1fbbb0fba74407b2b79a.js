"use strict";(self.webpackChunkaryumka_me=self.webpackChunkaryumka_me||[]).push([[1482,3284,4164,4646,4926,6638,7824,7860,8995],{7272:function(e,n,a){a.r(n);var t=a(9128),s=a(9474);function l(e){const n=Object.assign({p:"p",span:"span",ul:"ul",li:"li",a:"a"},(0,t.R)(),e.components);return s.createElement(s.Fragment,null,s.createElement(n.p,null,"시스템끼리 통신할 때(특히 web 기반) ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">JSON</code>'}})," 포맷을 사용한다."),"\n",s.createElement(n.p,null,"이 때 발신하는 측에서 직렬화",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">stringify</code>'}}),"가 발생하고 수신하는 측에서는 역직렬화",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">parse</code>'}}),"가 필요하다.\n데이터를 수신하는 측에서 JSON을 다시 객체로 사용하기 위해 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">parse</code>'}}),"하게 되는데 이 때 유효하지 않은 문자가 포함된 경우 parsing error가 발생한다."),"\n",s.createElement(n.p,null,"따라서 데이터의 json에서 유효하지 않은 문자열을",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">validation</code>'}}),", ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">normalization</code>'}})," 등 후처리 작업을 통해 처리해주어야 한다."),"\n",s.createElement(n.p,null,"JSON에서 parsing 오류가 발생하는 경우는 다음과 같은 경우들이 대표적이다."),"\n",s.createElement(n.ul,null,"\n",s.createElement(n.li,null,"JSON 문법에 맞지 않는 경우"),"\n",s.createElement(n.li,null,"인코딩 이슈"),"\n",s.createElement(n.li,null,'유효하지 않은 문자열이 포함된 경우 - 키와 밸류를 둘러싼 따옴표를 제외한 따옴표(")나 제어문자 등 출력문자가 아닌 문자 등\n',s.createElement(n.a,{href:"https://www.geeksforgeeks.org/what-is-json-parsing-error-invalid-character/",rel:"nofollow noopener noreferrer"},"출처: geeksforgeeks")),"\n"),"\n",s.createElement(n.p,null,"만약 JSON 문법에 맞지 않거나 인코딩 이슈가 발생하는 등 데이터 역직렬화에 심각한 지장이 있는 경우 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">validation</code>'}}),"을 통해 예외를 리턴하는 것이 더 적절할 수 있지만 일부 문자열만 제거해주면 데이터 표현이 가능한 경우 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">normalization</code>'}}),"을 통해 문자열을 직접 수정해주는 것도 좋은 방법일 수 있다."),"\n",s.createElement(n.p,null,"제어문자는 아래 유니코드 표에서 U+0000부터 U+001F까지, U+007F부터 U+009F까지를 포함한다.\n",s.createElement(n.a,{href:"https://en.wikipedia.org/wiki/List_of_Unicode_characters#Control_codes",rel:"nofollow noopener noreferrer"},"유니코드표 - 제어문자")),"\n",s.createElement(n.p,null,"자바에서는 간단하게 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">p{Cntrl}</code>'}}),"와 같은 정규식으로 제어문자 체크가 가능하다."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="java"><pre class="language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">getValidJsonString</span><span class="token punctuation">(</span><span class="token class-name">String</span> jsonString<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t<span class="token comment">//\\p{Cntrl} : 제어문자, \\" : 큰따옴표</span>\n\t<span class="token keyword">return</span> jsonString<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">"[\\\\p{Cntrl}\\"]"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"그러나 위와 같이 표현할 경우 개행문자(\\n)나 캐리지리턴(\\r) 같은 문자들이 모두 삭제되므로 주의해야 한다."))}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,t.R)(),e.components);return n?s.createElement(n,e,s.createElement(l,e)):l(e)}},9128:function(e,n,a){a.d(n,{R:function(){return r}});var t=a(9474);const s={},l=t.createContext(s);function r(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}}}]);
//# sourceMappingURL=component---src-posts-2024-04-03-til-json-mdx-1fbbb0fba74407b2b79a.js.map
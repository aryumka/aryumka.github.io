{"version":3,"file":"component---src-pages-about-tsx-da56308638ffce867a28.js","mappings":"uJASA,MAAMA,EAAOC,IAAmC,IAAlC,SAAEC,EAAQ,KAAEC,GAAiBF,EACzC,OACEG,EAAAA,EAAAA,GAAA,KAAGD,KAAMA,EAAME,MAAO,CAAEC,eAAgB,OAAQC,MAAO,WAAaC,OAAO,UACxEN,EACC,EA+CR,UA3CcO,KAqBVL,EAAAA,EAAAA,GAACM,EAAAA,EAAe,MACdN,EAAAA,EAAAA,GAACO,EAAAA,EAAG,CAACC,MAAM,WAEXR,EAAAA,EAAAA,GAAA,UAAI,4BACJA,EAAAA,EAAAA,GAAA,WACEA,EAAAA,EAAAA,GAAA,WACEA,EAAAA,EAAAA,GAAA,cAAQ,4BAAiC,gBAAYA,EAAAA,EAAAA,GAAA,cAIzDA,EAAAA,EAAAA,GAAA,UAAI,mBACJA,EAAAA,EAAAA,GAAA,UA/BgB,CAClB,CACED,KAAM,uCACNU,KAAM,aAER,CACEV,KAAM,2CACNU,KAAM,iBAER,CACEV,KAAM,0CACNU,KAAM,gBAER,CACEV,KAAM,+CACNU,KAAM,sBAiBSC,KAAIC,IACfX,EAAAA,EAAAA,GAAA,MAAIY,IAAKD,EAAKZ,OACZC,EAAAA,EAAAA,GAACJ,EAAI,CAACG,KAAMY,EAAKZ,MAAOY,EAAKF,U,wDCjCzC,MAAMF,EAAMV,IAA6C,IAADgB,EAAAC,EAAAC,EAAA,IAA3C,MAAEP,EAAK,YAAEQ,EAAW,KAAEC,GAAgBpB,EACjD,MAAM,KAAEqB,IAASC,EAAAA,EAAAA,gBAAe,YAY1BC,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAYd,IAA0B,QAArBK,EAAIK,EAAKG,oBAAY,IAAAR,OAAA,EAAjBA,EAAmBL,OAE9C,OACER,EAAAA,EAAAA,GAACuB,EAAAA,EAAM,CACLC,eAAgB,CACdC,GAAI,MAENjB,MAAOc,EACPI,cAAelB,EAAQ,uBAAoBmB,EAC3CV,KAAM,CACJ,CACEW,KAAM,cACNC,QAAST,GAEX,CACEU,SAAU,SACVD,QAAS,iBAEX,CACEC,SAAU,WACVD,QAASP,GAEX,CACEQ,SAAU,iBACVD,QAAST,GAEX,CACEU,SAAU,UACVD,QAAS,WAEX,CACEC,SAAU,eACVD,QAAS,cAEX,CACEC,SAAU,YACVD,QAAS,SAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAAS,gBAEX,CACED,KAAM,gBACNC,QAASP,GAEX,CACEM,KAAM,sBACNC,QAAST,GAEX,CACEU,SAAU,WACVD,QACiE,QAD1Df,EACiD,QADjDC,EACLE,EAAKc,MAAMpB,GAAgC,aAAlBA,EAAKmB,kBAAwB,IAAAf,OAAA,EAAtDA,EAAwDc,eAAO,IAAAf,EAAAA,EAC/D,qCAEJkB,OAAOf,IACT,EAINV,EAAI0B,aAAe,CACjBC,KAAM,KACNjB,KAAM,GACND,YAAa,IAUf,K","sources":["webpack://aryumka.me/./src/pages/about.tsx","webpack://aryumka.me/./src/components/SEO/index.tsx"],"sourcesContent":["import React from 'react';\nimport DefaultTemplate from '@templates/default';\nimport SEO from '@components/SEO';\n\ninterface LinkProps {\n  children: React.ReactNode;\n  href: string;\n}\n\nconst Link = ({ children, href }: LinkProps) => {\n  return (\n    <a href={href} style={{ textDecoration: 'none', color: '#5c6ac4' }} target=\"_blank\">\n      {children}\n    </a>\n  );\n};\n\nconst About = () => {\n  const opensources = [\n    {\n      href: 'https://github.com/aryumka/kontainer',\n      text: 'kontainer'\n    },\n    {\n      href: 'https://github.com/aryumka/BigInteger.kt',\n      text: 'BigInteger.kt'\n    },\n    {\n      href: 'https://github.com/aryumka/tdd-practice',\n      text: 'tdd-practice'\n    },\n    {\n      href: 'https://github.com/aryumka/rabbitmq-tutorial',\n      text: 'rabbitmq-tutorial'\n    }\n  ];\n\n  return (\n    <DefaultTemplate>\n      <SEO title=\"About\" />\n\n      <h2>üíº Currently working on</h2>\n      <ul>\n        <li>\n          <strong>Venture Capital Projects</strong> 2022. 02 ~ <br />\n        </li>\n      </ul>\n\n      <h2>‚ù§Ô∏è Open Source</h2>\n      <ul>\n        {opensources.map(item => (\n          <li key={item.href}>\n            <Link href={item.href}>{item.text}</Link>\n          </li>\n        ))}\n      </ul>\n    </DefaultTemplate>\n  );\n};\n\nexport default About;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  imagePath?: string;\n  meta?: any;\n}\n\nconst SEO = ({ title, description, meta }: SEOProps) => {\n  const { site } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          author\n        }\n      }\n    }\n  `);\n\n  const metaDescription = description || site.siteMetadata.description;\n  const metaTitle = title || site.siteMetadata?.title;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        ko: 'ko'\n      }}\n      title={metaTitle}\n      titleTemplate={title ? `%s | aryumka.me` : undefined}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `author`,\n          content: `Lee Sun-Hyoup`\n        },\n        {\n          property: `og:title`,\n          content: metaTitle\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          property: `og:site_name`,\n          content: `aryumka.me`\n        },\n        {\n          property: `og:locale`,\n          content: `ko_KR`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: 'Sunhyoup Lee'\n        },\n        {\n          name: `twitter:title`,\n          content: metaTitle\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:image`,\n          content:\n            meta.find((item: any) => item.property === 'og:image')?.content ??\n            'https://aryumka.me/images/og.png'\n        }\n      ].concat(meta)}\n    />\n  );\n};\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n"],"names":["Link","_ref","children","href","___EmotionJSX","style","textDecoration","color","target","About","DefaultTemplate","SEO","title","text","map","item","key","_site$siteMetadata","_meta$find$content","_meta$find","description","meta","site","useStaticQuery","metaDescription","siteMetadata","metaTitle","Helmet","htmlAttributes","ko","titleTemplate","undefined","name","content","property","find","concat","defaultProps","lang"],"sourceRoot":""}
{"version":3,"file":"component---src-templates-post-tsx-content-file-path-src-posts-2023-12-28-holiday-til-1-md-ed7454f4627c035d67f9.js","mappings":"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","sources":["webpack://aryumka.me/./src/posts/2023-12-28-holiday-til-1.md","webpack://aryumka.me/./src/templates/post.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    a: \"a\",\n    p: \"p\",\n    blockquote: \"blockquote\",\n    ol: \"ol\",\n    li: \"li\",\n    span: \"span\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, {\n    id: \"kotlin-data-class로-entity구현하기\"\n  }, React.createElement(_components.a, {\n    href: \"#kotlin-data-class로-entity구현하기\"\n  }, \"kotlin data class로 entity구현하기\")), \"\\n\", React.createElement(_components.p, null, \"Kotlin의 data class는 일단 equals(), copy(), toString() 등 기본적인 메서드들을 만들어줘서 너무 편하다. 기본적으로 immutable인 점도 좋다.\\n하지만 도메인 모델의 풍성한 로직을 표현하는데 적합할까? 그건 추후 더 복잡한 비즈니스 로직을 구현할 때 확인할 예정이다.\"), \"\\n\", React.createElement(_components.p, null, \"일단 기본적인 기능 구현 시 궁금했던 점은\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"data class의 모든 필드를 val로 정의하였을 때 더티체킹이 잘 작동할지?\"), \"\\n\", React.createElement(_components.li, null, \"id default값을 기본 0으로 생성해주는데 save 시 새로 생성해야 한다고 판단할 수 있을지? 필드값도 주입 안받으면 기본 0으로 생성되니까 문제는 없어야 맞긴 한데..\"), \"\\n\", React.createElement(_components.li, null, \"기본 equals()는 구조적인 동일성을 판단하는데 Entity의 equals와 호환이 될지\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"였다. 그래서 \", React.createElement(_components.a, {\n    href: \"https://kotest.io/\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"Kotest\"), \"로 테스트 해봤다.\"), \"\\n\", React.createElement(_components.p, null, \"코틀린 환경에서 Spring Data JPA의 save()를 테스트 하기 위해 mocking이 아닌 실제 프레임워크 테스트가 필요했다.\\nJunit에서와 마찬가지로 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">@SpringBootTest</code>\"\n    }\n  }), \" 애너테이션을 통해 스프링 빈 주입이 가능했다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"kotest\"\n  }, React.createElement(_components.a, {\n    href: \"#kotest\"\n  }, \"Kotest\")), \"\\n\", React.createElement(_components.p, null, \"다양한 테스트 스타일을 지원한다. 원하는 스타일의 Spec을 상속받아 클래스를 생성하여 사용한다.\\n\", React.createElement(_components.img, {\n    src: \"https://velog.velcdn.com/images/aryumka/post/1a9143f5-c438-4cb4-88ca-628cbb13d99c/image.png\",\n    alt: \"\"\n  })), \"\\n\", React.createElement(_components.p, null, \"특히 BDD 스타일인 BehaviorSpec이 흥미로웠다.\\n주석으로 처리되는 given, when, then 같은 테스트 원칙들을 DSL로 코드화했다는 점이 매우 코틀린스럽다.\\nJUnit과 같은 애너테이션 스타일도 지원하지만 굳이 쓸 필요는 없어보인다.\"), \"\\n\", React.createElement(_components.p, null, \"아래는 BehaviorSpec을 상속받아 만든 테스트 예시이다. 클래스 생성자 파라미터로 코드블록을 넣으면 init\", \" 블럭에서 해당 코드블록이 실행된다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"kotlin\\\"><pre class=\\\"language-kotlin\\\"><code class=\\\"language-kotlin\\\"><span class=\\\"token keyword\\\">class</span> ProposeGenerator <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">fun</span> <span class=\\\"token function\\\">generateProposal</span><span class=\\\"token punctuation\\\">(</span>title<span class=\\\"token operator\\\">:</span> String<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> FundingProposal <span class=\\\"token operator\\\">=</span>\\n        <span class=\\\"token function\\\">FundingProposal</span><span class=\\\"token punctuation\\\">(</span>title <span class=\\\"token operator\\\">=</span> title<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">class</span> ProPoseGeneratorTest<span class=\\\"token operator\\\">:</span> <span class=\\\"token function\\\">BehaviorSpec</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">given</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서 생성기가 주어졌을 때\\\"</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">val</span> generator <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">ProposeGenerator</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n\\n        <span class=\\\"token function\\\">`when`</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서를 생성한다면\\\"</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">val</span> proposal <span class=\\\"token operator\\\">=</span> generator<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">generateProposal</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서 제목\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n\\n            <span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서는 생성된다\\\"</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                proposal<span class=\\\"token punctuation\\\">.</span>title shouldBe <span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서 제목\\\"</span></span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"뭔가 다른 처리가 필요하면 클래스 바디로 init 블록을 따로 뺄 수도 있다. Spring Data JPA가 어떻게 작동하는지 알아보기 위해서는 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">@Autowired</code>\"\n    }\n  }), \"를 통한 의존성 주입이 필요했기에 아래와 같이 작성하였다. FunSpec도 사용해봤다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"kotlin\\\"><pre class=\\\"language-kotlin\\\"><code class=\\\"language-kotlin\\\"><span class=\\\"token annotation builtin\\\">@SpringBootTest</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token function\\\">ProposeUpdateTest</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token annotation builtin\\\">@Autowired</span> <span class=\\\"token keyword\\\">private</span> <span class=\\\"token keyword\\\">val</span> repository<span class=\\\"token operator\\\">:</span> ProposalRepository<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token function\\\">FunSpec</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"token comment\\\">//    @Autowired //이런식으로는 사용할 수 없다</span>\\n<span class=\\\"token comment\\\">//    private val repository: ProposalRepository</span>\\n    <span class=\\\"token annotation builtin\\\">@Autowired</span>\\n    <span class=\\\"token keyword\\\">val</span> service <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">ProposeService</span><span class=\\\"token punctuation\\\">(</span>repository<span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">init</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">context</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"신청된 제안서가 있는 상황에서\\\"</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">val</span> proposal <span class=\\\"token operator\\\">=</span> service<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createFundingProposal</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서 제목\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"proposal: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">$</span><span class=\\\"token expression\\\">proposal</span></span><span class=\\\"token string\\\">\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n\\n            <span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서를 수정한다면\\\"</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">val</span> newTitle <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"새로운 제안서 제목\\\"</span></span>\\n                <span class=\\\"token keyword\\\">val</span> updatedProposal <span class=\\\"token operator\\\">=</span> service<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">updateFundingProposal</span><span class=\\\"token punctuation\\\">(</span>proposal<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span> newTitle<span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"updatedProposal: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">$</span><span class=\\\"token expression\\\">updatedProposal</span></span><span class=\\\"token string\\\">\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n                updatedProposal<span class=\\\"token operator\\\">!!</span><span class=\\\"token punctuation\\\">.</span>id shouldBe proposal<span class=\\\"token punctuation\\\">.</span>id\\n            <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"테스트 결과\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"immutable인 data class와 그 안의 val 속성들을 조작이 아닌 깊은 복사(=copy())했을 때 더티체킹은 작동하지 않는다. 더티체킹은 객체의 속성 단위에서 체크할 뿐 객체 reference는 작동하지 않는다고 한다. save()를 통해 persist해줘야 한다. 비즈니스로직과 프레임워크를 분리하기 위해 더티체킹을 일부러 사용하지 않기도 한다고 한다.\"), \"\\n\", React.createElement(_components.li, null, \"0도 null이라고 인식한다고 한다. 기본타입에서는 default값이 있으니까 당연히 되어야 하는게 맞다.\"), \"\\n\", React.createElement(_components.li, null, \"이건 더티체킹과 엮여서 좀 헷갈렸던 부분. EntityManager로부터 관리되지 않는 Entity들은 일단 논외. hashcode를 더 공부해야할듯.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"프레임워크가 어떻게 동작하는지 보기 위해서 어쩔수 없이 SpringBootTest를 했지만 매번 리부팅되는 걸 보면서 속이 너무나도 답답했다.\"), \"\\n\", React.createElement(_components.p, null, \"mocking은 내일하자.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kciter/project/aryumka-blog/src/posts/2023-12-28-holiday-til-1.md\";\nimport _styled from \"@emotion/styled/base\";\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n}\nimport React from 'react';\nimport DefaultTemplate from '@templates/default';\nimport SEO from '@components/SEO';\nimport dayjs from 'dayjs';\nimport PostFooter from '@components/PostFooter';\nimport RelatedPost from '@components/RelatedPost';\nimport TableOfContents from '@components/TableOfContents';\nimport {Helmet} from 'react-helmet';\nimport $ from 'jquery';\nimport {useEffect} from 'react';\nimport {useState} from 'react';\nimport Series from '@components/Series';\nimport {jsx as ___EmotionJSX} from \"@emotion/react\";\ndayjs.extend(require('dayjs/plugin/localizedFormat'));\nconst PostTemplate = _ref => {\n  let {data, location, pageContext, children} = _ref;\n  const {tableOfContents, fields, frontmatter, excerpt} = data.mdx;\n  const {series} = pageContext;\n  const author = 'Lee Sun-Hyoup';\n  const date = dayjs(fields.date).locale('ko').format();\n  const applicationLdJson = {\n    headline: frontmatter.title,\n    dateModified: date,\n    datePublished: date,\n    image: \"\" + location.href + frontmatter.image,\n    mainEntityOfPage: {\n      '@type': 'WebPage',\n      '@id': location.href\n    },\n    author: {\n      '@type': 'Person',\n      name: author\n    },\n    url: location.href,\n    description: excerpt,\n    '@type': 'BlogPosting',\n    '@context': 'https://schema.org'\n  };\n  useEffect(() => {\n    if (typeof document === undefined) return;\n    $(function () {\n      $('.post-container a[data-footnote-ref]').each((_, item) => {\n        var _$$attr;\n        const href = (_$$attr = $(item).attr('href')) === null || _$$attr === void 0 ? void 0 : _$$attr.slice(1);\n        const text = $('#' + href).text().replace('↩', '');\n        $(item).attr('data-tooltip', text);\n      });\n    });\n  }, []);\n  const {0: posts, 1: setPosts} = useState();\n  useEffect(() => {\n    setPosts(data.allMdx.edges.filter(item => item.node.fields.slug !== fields.slug).sort(() => Math.random() - 0.5).slice(0, 6));\n  }, []);\n  const draft = frontmatter.draft && process.env.NODE_ENV !== 'development';\n  return ___EmotionJSX(DefaultTemplate, null, ___EmotionJSX(SEO, {\n    title: frontmatter.title,\n    description: excerpt,\n    meta: [{\n      name: \"article:published_time\",\n      content: dayjs(fields.date).locale('ko').format()\n    }, {\n      name: \"image\",\n      content: \"https://aryumka.me\" + frontmatter.image\n    }, {\n      property: \"og:image\",\n      content: \"https://aryumka.me\" + frontmatter.image\n    }, {\n      property: \"og:image:secure_url\",\n      content: \"https://aryumka.me\" + frontmatter.image\n    }]\n  }), ___EmotionJSX(Helmet, null, ___EmotionJSX(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(applicationLdJson))), ___EmotionJSX(\"h1\", {\n    className: \"post-title\"\n  }, frontmatter.title), ___EmotionJSX(\"span\", {\n    className: \"post-date\"\n  }, \"Written on \", dayjs(fields.date).locale('en').format('LL')), ___EmotionJSX(\"img\", {\n    src: frontmatter.image,\n    style: {\n      objectFit: 'cover',\n      maxHeight: 300,\n      width: '100%'\n    }\n  }), draft || tableOfContents.items && ___EmotionJSX(TableOfContents, {\n    items: tableOfContents.items\n  }), draft || (series === null || series === void 0 ? void 0 : series.items) && ___EmotionJSX(Series, {\n    title: series.title,\n    items: series.items,\n    currentItem: frontmatter.title\n  }), ___EmotionJSX(\"div\", {\n    className: \"post-content\"\n  }, draft ? ___EmotionJSX(NotYetPublished, null, \"Not yet published\") : children), ___EmotionJSX(PostFooter, {\n    tags: frontmatter.tags,\n    comment: frontmatter.comments\n  }), posts && ___EmotionJSX(RelatedPost, {\n    posts: posts,\n    current: fields.slug\n  }));\n};\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"2550809065\";\nconst NotYetPublished = _styled(\"div\", process.env.NODE_ENV === \"production\" ? {\n  target: \"ezegrm70\"\n} : {\n  target: \"ezegrm70\",\n  label: \"NotYetPublished\"\n})(process.env.NODE_ENV === \"production\" ? {\n  name: \"xl5zip\",\n  styles: \"margin:16px 0;font-weight:bold;font-size:20px;text-align:center\"\n} : {\n  name: \"xl5zip\",\n  styles: \"margin:16px 0;font-weight:bold;font-size:20px;text-align:center\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9rY2l0ZXIvcHJvamVjdC9hcnl1bWthLWJsb2cvc3JjL3RlbXBsYXRlcy9wb3N0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3S2tDIiwiZmlsZSI6Ii9Vc2Vycy9rY2l0ZXIvcHJvamVjdC9hcnl1bWthLWJsb2cvc3JjL3RlbXBsYXRlcy9wb3N0LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VMYXlvdXRFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBncmFwaHFsLCBQYWdlUHJvcHMsIHVzZVN0YXRpY1F1ZXJ5IH0gZnJvbSAnZ2F0c2J5JztcbmltcG9ydCBEZWZhdWx0VGVtcGxhdGUgZnJvbSAnQHRlbXBsYXRlcy9kZWZhdWx0JztcbmltcG9ydCBTRU8gZnJvbSAnQGNvbXBvbmVudHMvU0VPJztcbmltcG9ydCBkYXlqcyBmcm9tICdkYXlqcyc7XG5pbXBvcnQgUG9zdEZvb3RlciBmcm9tICdAY29tcG9uZW50cy9Qb3N0Rm9vdGVyJztcbmltcG9ydCBSZWxhdGVkUG9zdCBmcm9tICdAY29tcG9uZW50cy9SZWxhdGVkUG9zdCc7XG5pbXBvcnQgVGFibGVPZkNvbnRlbnRzIGZyb20gJ0Bjb21wb25lbnRzL1RhYmxlT2ZDb250ZW50cyc7XG5pbXBvcnQgeyBIZWxtZXQgfSBmcm9tICdyZWFjdC1oZWxtZXQnO1xuaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFNlcmllcyBmcm9tICdAY29tcG9uZW50cy9TZXJpZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuXG5kYXlqcy5leHRlbmQocmVxdWlyZSgnZGF5anMvcGx1Z2luL2xvY2FsaXplZEZvcm1hdCcpKTtcblxuY29uc3QgUG9zdFRlbXBsYXRlID0gKHsgZGF0YSwgbG9jYXRpb24sIHBhZ2VDb250ZXh0LCBjaGlsZHJlbiB9OiBQYWdlUHJvcHMpID0+IHtcbiAgY29uc3QgeyB0YWJsZU9mQ29udGVudHMsIGZpZWxkcywgZnJvbnRtYXR0ZXIsIGV4Y2VycHQgfSA9IChkYXRhIGFzIGFueSkubWR4O1xuXG4gIGNvbnN0IHsgc2VyaWVzIH0gPSBwYWdlQ29udGV4dCBhcyBhbnk7XG5cbiAgY29uc3QgYXV0aG9yID0gJ0xlZSBTdW4tSHlvdXAnO1xuICBjb25zdCBkYXRlID0gZGF5anMoZmllbGRzLmRhdGUpLmxvY2FsZSgna28nKS5mb3JtYXQoKTtcbiAgY29uc3QgYXBwbGljYXRpb25MZEpzb24gPSB7XG4gICAgaGVhZGxpbmU6IGZyb250bWF0dGVyLnRpdGxlLFxuICAgIGRhdGVNb2RpZmllZDogZGF0ZSxcbiAgICBkYXRlUHVibGlzaGVkOiBkYXRlLFxuICAgIGltYWdlOiBgJHtsb2NhdGlvbi5ocmVmfSR7ZnJvbnRtYXR0ZXIuaW1hZ2V9YCxcbiAgICBtYWluRW50aXR5T2ZQYWdlOiB7XG4gICAgICAnQHR5cGUnOiAnV2ViUGFnZScsXG4gICAgICAnQGlkJzogbG9jYXRpb24uaHJlZlxuICAgIH0sXG4gICAgYXV0aG9yOiB7ICdAdHlwZSc6ICdQZXJzb24nLCBuYW1lOiBhdXRob3IgfSxcbiAgICB1cmw6IGxvY2F0aW9uLmhyZWYsXG4gICAgZGVzY3JpcHRpb246IGV4Y2VycHQsXG4gICAgJ0B0eXBlJzogJ0Jsb2dQb3N0aW5nJyxcbiAgICAnQGNvbnRleHQnOiAnaHR0cHM6Ly9zY2hlbWEub3JnJ1xuICB9O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gdW5kZWZpbmVkKSByZXR1cm47XG5cbiAgICAkKGZ1bmN0aW9uICgpIHtcbiAgICAgICQoJy5wb3N0LWNvbnRhaW5lciBhW2RhdGEtZm9vdG5vdGUtcmVmXScpLmVhY2goKF8sIGl0ZW0pID0+IHtcbiAgICAgICAgY29uc3QgaHJlZiA9ICQoaXRlbSkuYXR0cignaHJlZicpPy5zbGljZSgxKTtcbiAgICAgICAgY29uc3QgdGV4dCA9ICQoJyMnICsgaHJlZilcbiAgICAgICAgICAudGV4dCgpXG4gICAgICAgICAgLnJlcGxhY2UoJ+KGqScsICcnKTtcblxuICAgICAgICAkKGl0ZW0pLmF0dHIoJ2RhdGEtdG9vbHRpcCcsIHRleHQpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0sIFtdKTtcblxuICBjb25zdCBbcG9zdHMsIHNldFBvc3RzXSA9IHVzZVN0YXRlKCk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0UG9zdHMoXG4gICAgICAoZGF0YSBhcyBhbnkpLmFsbE1keC5lZGdlc1xuICAgICAgICAuZmlsdGVyKChpdGVtOiBhbnkpID0+IGl0ZW0ubm9kZS5maWVsZHMuc2x1ZyAhPT0gZmllbGRzLnNsdWcpXG4gICAgICAgIC5zb3J0KCgpID0+IE1hdGgucmFuZG9tKCkgLSAwLjUpXG4gICAgICAgIC5zbGljZSgwLCA2KVxuICAgICk7XG4gIH0sIFtdKTtcblxuICBjb25zdCBkcmFmdCA9IGZyb250bWF0dGVyLmRyYWZ0ICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAnZGV2ZWxvcG1lbnQnO1xuXG4gIHJldHVybiAoXG4gICAgPERlZmF1bHRUZW1wbGF0ZT5cbiAgICAgIDxTRU9cbiAgICAgICAgdGl0bGU9e2Zyb250bWF0dGVyLnRpdGxlfVxuICAgICAgICBkZXNjcmlwdGlvbj17ZXhjZXJwdH1cbiAgICAgICAgbWV0YT17W1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6IGBhcnRpY2xlOnB1Ymxpc2hlZF90aW1lYCxcbiAgICAgICAgICAgIGNvbnRlbnQ6IGRheWpzKGZpZWxkcy5kYXRlKS5sb2NhbGUoJ2tvJykuZm9ybWF0KClcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6IGBpbWFnZWAsXG4gICAgICAgICAgICBjb250ZW50OiBgaHR0cHM6Ly9hcnl1bWthLm1lJHtmcm9udG1hdHRlci5pbWFnZX1gXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBwcm9wZXJ0eTogYG9nOmltYWdlYCxcbiAgICAgICAgICAgIGNvbnRlbnQ6IGBodHRwczovL2FyeXVta2EubWUke2Zyb250bWF0dGVyLmltYWdlfWBcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHByb3BlcnR5OiBgb2c6aW1hZ2U6c2VjdXJlX3VybGAsXG4gICAgICAgICAgICBjb250ZW50OiBgaHR0cHM6Ly9hcnl1bWthLm1lJHtmcm9udG1hdHRlci5pbWFnZX1gXG4gICAgICAgICAgfVxuICAgICAgICBdfVxuICAgICAgLz5cblxuICAgICAgPEhlbG1ldD5cbiAgICAgICAgPHNjcmlwdCB0eXBlPVwiYXBwbGljYXRpb24vbGQranNvblwiPntKU09OLnN0cmluZ2lmeShhcHBsaWNhdGlvbkxkSnNvbil9PC9zY3JpcHQ+XG4gICAgICA8L0hlbG1ldD5cblxuICAgICAgPGgxIGNsYXNzTmFtZT1cInBvc3QtdGl0bGVcIj57ZnJvbnRtYXR0ZXIudGl0bGV9PC9oMT5cblxuICAgICAgPHNwYW4gY2xhc3NOYW1lPVwicG9zdC1kYXRlXCI+V3JpdHRlbiBvbiB7ZGF5anMoZmllbGRzLmRhdGUpLmxvY2FsZSgnZW4nKS5mb3JtYXQoJ0xMJyl9PC9zcGFuPlxuXG4gICAgICA8aW1nIHNyYz17ZnJvbnRtYXR0ZXIuaW1hZ2V9IHN0eWxlPXt7IG9iamVjdEZpdDogJ2NvdmVyJywgbWF4SGVpZ2h0OiAzMDAsIHdpZHRoOiAnMTAwJScgfX0gLz5cblxuICAgICAge2RyYWZ0IHx8ICh0YWJsZU9mQ29udGVudHMuaXRlbXMgJiYgPFRhYmxlT2ZDb250ZW50cyBpdGVtcz17dGFibGVPZkNvbnRlbnRzLml0ZW1zfSAvPil9XG5cbiAgICAgIHtkcmFmdCB8fFxuICAgICAgICAoc2VyaWVzPy5pdGVtcyAmJiAoXG4gICAgICAgICAgPFNlcmllcyB0aXRsZT17c2VyaWVzLnRpdGxlfSBpdGVtcz17c2VyaWVzLml0ZW1zfSBjdXJyZW50SXRlbT17ZnJvbnRtYXR0ZXIudGl0bGV9IC8+XG4gICAgICAgICkpfVxuXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvc3QtY29udGVudFwiPlxuICAgICAgICB7ZHJhZnQgPyA8Tm90WWV0UHVibGlzaGVkPk5vdCB5ZXQgcHVibGlzaGVkPC9Ob3RZZXRQdWJsaXNoZWQ+IDogY2hpbGRyZW59XG4gICAgICA8L2Rpdj5cblxuICAgICAgPFBvc3RGb290ZXIgdGFncz17ZnJvbnRtYXR0ZXIudGFnc30gY29tbWVudD17ZnJvbnRtYXR0ZXIuY29tbWVudHN9IC8+XG5cbiAgICAgIHtwb3N0cyAmJiA8UmVsYXRlZFBvc3QgcG9zdHM9e3Bvc3RzfSBjdXJyZW50PXtmaWVsZHMuc2x1Z30gLz59XG4gICAgPC9EZWZhdWx0VGVtcGxhdGU+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBQb3N0VGVtcGxhdGU7XG5cbmV4cG9ydCBjb25zdCBwYWdlUXVlcnkgPSBncmFwaHFsYFxuICBxdWVyeSBQb3N0QnlTbHVnKCRzbHVnOiBTdHJpbmchKSB7XG4gICAgc2l0ZSB7XG4gICAgICBzaXRlTWV0YWRhdGEge1xuICAgICAgICB0aXRsZVxuICAgICAgfVxuICAgIH1cbiAgICBtZHgoZmllbGRzOiB7IHNsdWc6IHsgZXE6ICRzbHVnIH0gfSkge1xuICAgICAgYm9keVxuICAgICAgdGFibGVPZkNvbnRlbnRzXG4gICAgICBleGNlcnB0XG4gICAgICBmaWVsZHMge1xuICAgICAgICBzbHVnXG4gICAgICAgIGRhdGVcbiAgICAgIH1cbiAgICAgIGZyb250bWF0dGVyIHtcbiAgICAgICAgdGl0bGVcbiAgICAgICAgY2F0ZWdvcmllc1xuICAgICAgICB0YWdzXG4gICAgICAgIGltYWdlXG4gICAgICAgIGNvbW1lbnRzXG4gICAgICAgIGRyYWZ0XG4gICAgICB9XG4gICAgfVxuICAgIGFsbE1keChcbiAgICAgIGZpbHRlcjoge1xuICAgICAgICBmaWVsZHM6IHsgdHlwZTogeyBlcTogXCJwb3N0XCIgfSB9XG4gICAgICAgIGZyb250bWF0dGVyOiB7IGRyYWZ0OiB7IG5lOiB0cnVlIH0sIGhpZGU6IHsgbmU6IHRydWUgfSB9XG4gICAgICB9XG4gICAgKSB7XG4gICAgICBlZGdlcyB7XG4gICAgICAgIG5vZGUge1xuICAgICAgICAgIGZpZWxkcyB7XG4gICAgICAgICAgICBkYXRlXG4gICAgICAgICAgICBzbHVnXG4gICAgICAgICAgfVxuICAgICAgICAgIGZyb250bWF0dGVyIHtcbiAgICAgICAgICAgIHRpdGxlXG4gICAgICAgICAgICBpbWFnZVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuYDtcblxuY29uc3QgTm90WWV0UHVibGlzaGVkID0gc3R5bGVkLmRpdmBcbiAgbWFyZ2luOiAxNnB4IDA7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBmb250LXNpemU6IDIwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbmA7XG4iXX0= */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","a","p","blockquote","ol","li","span","img","_provideComponents","components","React","id","href","rel","dangerouslySetInnerHTML","__html","src","alt","wrapper","MDXLayout","dayjs","require","PostTemplate","_ref","data","location","pageContext","children","tableOfContents","fields","frontmatter","excerpt","mdx","series","date","locale","format","applicationLdJson","headline","title","dateModified","datePublished","image","mainEntityOfPage","author","name","url","description","useEffect","undefined","document","$","each","_","item","_$$attr","attr","slice","text","replace","posts","setPosts","useState","allMdx","edges","filter","node","slug","sort","Math","random","draft","process","___EmotionJSX","DefaultTemplate","SEO","meta","content","property","Helmet","type","JSON","stringify","className","style","objectFit","maxHeight","width","items","TableOfContents","Series","currentItem","NotYetPublished","PostFooter","tags","comment","comments","RelatedPost","current","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","_styled","target","styles"],"sourceRoot":""}
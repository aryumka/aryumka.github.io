{"version":3,"file":"component---src-posts-2023-12-29-holiday-til-2-mdx-3b2605acc1263aef52ac.js","mappings":"+LAIA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,KAAM,SACLC,EAAAA,EAAAA,KAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,GAAI,CACnFO,GAAI,sBACHD,EAAAA,cAAoBT,EAAYI,EAAG,CACpCO,KAAM,uBACL,uBAAwB,KAAMF,EAAAA,cAAoBT,EAAYK,EAAG,KAAM,uNAAwN,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CAC5UM,wBAAyB,CACvBC,OAAQ,24BAER,KAAMJ,EAAAA,cAAoBT,EAAYK,EAAG,KAAM,0DAA2D,KAAMI,EAAAA,cAAoBK,EAAAA,EAAO,CAC7IC,IAAK,gGACH,KAAMN,EAAAA,cAAoBT,EAAYK,EAAG,KAAM,8BAA+B,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CAC5HM,wBAAyB,CACvBC,OAAQ,ugBAER,KAAMJ,EAAAA,cAAoBT,EAAYK,EAAG,KAAM,6DAA8DI,EAAAA,cAAoBT,EAAYI,EAAG,CAClJO,KAAM,+FACNK,IAAK,gCACJ,sBAAuB,gBAAiB,KAAMP,EAAAA,cAAoBT,EAAYK,EAAG,KAAM,aAAc,KAAMI,EAAAA,cAAoBT,EAAYG,GAAI,CAChJO,GAAI,SACHD,EAAAA,cAAoBT,EAAYI,EAAG,CACpCO,KAAM,UACL,UAAW,KAAMF,EAAAA,cAAoBT,EAAYK,EAAG,KAAM,gDAAiDI,EAAAA,cAAoBT,EAAYI,EAAG,CAC/IO,KAAM,yDACNK,IAAK,gCACJ,gBAAiB,oGAAqG,KAAMP,EAAAA,cAAoBT,EAAYM,KAAM,CACnKM,wBAAyB,CACvBC,OAAQ,kkTAGd,CAKA,UAJA,SAAoBd,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOkB,QAASC,GAAajB,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,KAAsBR,EAAMS,YAC3E,OAAOU,EAAYT,EAAAA,cAAoBS,EAAWnB,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,C,yDCaA,IA/CcoB,IAAsD,IAArD,IAAEJ,EAAG,QAAEK,EAAO,MAAEC,EAAK,WAAEC,GAAwBH,EAC5D,MAAM,EAACI,EAAW,EAACC,IAAkBC,EAAAA,EAAAA,WAAS,GAE9C,OACEC,EAAAA,EAAAA,GAAA,eACEA,EAAAA,EAAAA,GAAA,OACEX,IAAKA,EACLM,MAAOA,EACPM,MAAO,CAAEC,OAAQN,EAAa,UAAY,WAC1CO,QAASP,EAAa,IAAME,GAAe,QAAQM,IAEpDV,IAAWM,EAAAA,EAAAA,GAAA,cAAYd,wBAAyB,CAAEC,OAAQO,KAC1DG,GACCQ,EAAAA,cACEL,EAAAA,EAAAA,GAAA,OACEC,MAAO,CACLK,SAAU,QACVC,IAAK,EACLC,KAAM,EACNb,MAAO,OACPc,OAAQ,OACRP,OAAQ,WACRQ,gBAAiB,sBAEnBP,QAASA,IAAML,GAAe,KAE9BE,EAAAA,EAAAA,GAAA,OACEC,MAAO,CACLU,aAAc,EACdC,SAAU,KACVjB,MAAO,MACPW,SAAU,QACVC,IAAK,MACLC,KAAM,MACNK,UAAW,wBACXH,gBAAiB,WAGnBV,EAAAA,EAAAA,GAAA,OAAKX,IAAKA,EAAKM,MAAM,WAGzBmB,SAASC,MAEN,C,qEC1Bb,MAAMC,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBpC,GAC/B,MAAMqC,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfnC,EACFA,EAAWqC,GAGb,IAAIA,KAAsBrC,EACnC,GACA,CAACqC,EAAmBrC,GAExB,C","sources":["webpack://aryumka.me/./src/posts/2023-12-29-holiday-til-2.mdx","webpack://aryumka.me/./src/components/Image/index.tsx","webpack://aryumka.me/./node_modules/.pnpm/@mdx-js+react@3.0.1_@types+react@18.2.79_react@18.2.0/node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Image from '@components/Image';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    a: \"a\",\n    p: \"p\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, {\n    id: \"github-action---ci\"\n  }, React.createElement(_components.a, {\n    href: \"#github-action---ci\"\n  }, \"Github Action - CI\")), \"\\n\", React.createElement(_components.p, null, \"깃허브에서 제공하는 CI/CD 툴이다.\\n공식홈페이지에 아주 자세한 설명이 나와있다. 사용방법은 매우 쉽다. 하고 싶은 작업과 조건들을 스크립트에 작성만 해주면 된다.\\n스크립트 템플릿도 바로 깃헙에서 만들 수 있다. 거기서 원하는 부분만 고쳐서 쓰면 된다.\\n일단 내 목적은 테스트 통과, build 통과였다. 자동생성된 템플릿에서 자바 버젼을 수정해주고 테스트를 추가해준다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"yaml\\\"><pre class=\\\"language-yaml\\\"><code class=\\\"language-yaml\\\">      <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token key atrule\\\">name</span><span class=\\\"token punctuation\\\">:</span> Set up JDK 19\\n        <span class=\\\"token key atrule\\\">uses</span><span class=\\\"token punctuation\\\">:</span> actions/setup<span class=\\\"token punctuation\\\">-</span>java@v1\\n        <span class=\\\"token key atrule\\\">with</span><span class=\\\"token punctuation\\\">:</span>\\n          <span class=\\\"token key atrule\\\">java-version</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">19</span>\\n\\n      <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token key atrule\\\">name</span><span class=\\\"token punctuation\\\">:</span> run tests\\n        <span class=\\\"token key atrule\\\">run</span><span class=\\\"token punctuation\\\">:</span> ./gradlew test</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"이렇게 처음 테스트를 실행할 때 ./gradlew 실행이 실패했다. 원인은 접근권한이 없다는 것.\"), \"\\n\", React.createElement(Image, {\n    src: \"https://velog.velcdn.com/images/aryumka/post/e6075269-05de-4e29-9193-98f4c4bee66c/image.png\"\n  }), \"\\n\", React.createElement(_components.p, null, \"그래서 권한 부여 커맨드를 스텝에 추가해주었다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"yaml\\\"><pre class=\\\"language-yaml\\\"><code class=\\\"language-yaml\\\">      <span class=\\\"token comment\\\"># Runs a single command using the runners shell</span>\\n      <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token key atrule\\\">name</span><span class=\\\"token punctuation\\\">:</span> Run a one<span class=\\\"token punctuation\\\">-</span>line script\\n        <span class=\\\"token key atrule\\\">run</span><span class=\\\"token punctuation\\\">:</span> chmod +x gradlew</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"깃헙에서 제공하는 가상머신 위에서 동작하기 때문에 매번 실행해주어야 할 것 같다.\\n공식 문서에 따르면 \", React.createElement(_components.a, {\n    href: \"https://docs.github.com/ko/actions/learn-github-actions/understanding-github-actions#runners\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"직접 자신의 runner를 호스팅\"), \"할 수도 있다고 한다.\"), \"\\n\", React.createElement(_components.p, null, \"빌드가 잘 된다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"mockk\"\n  }, React.createElement(_components.a, {\n    href: \"#mockk\"\n  }, \"Mockk\")), \"\\n\", React.createElement(_components.p, null, \"mockito보다 코틀린에 더 적합하다고 평가받는 mocking 라이브러리다.\\n\", React.createElement(_components.a, {\n    href: \"https://spring.io/guides/tutorials/spring-boot-kotlin/\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"스프링 공식 가이드문서\"), \"에 나온다.\\n위의 예시대로 스프링 환경에서 지원되는 버젼이 있어서 kotest와 섞어서 써보려고 했는데.. 잘 안된다.. 어디가 문젠지 모르겠다.\\n내일 다시 해봐야겠다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"kotlin\\\"><pre class=\\\"language-kotlin\\\"><code class=\\\"language-kotlin\\\"><span class=\\\"token annotation builtin\\\">@WebMvcTest</span><span class=\\\"token punctuation\\\">(</span>ProposeController<span class=\\\"token operator\\\">::</span><span class=\\\"token keyword\\\">class</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token annotation builtin\\\">@AutoConfigureMockMvc</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token function\\\">ProposeUpdateTestGpt</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token annotation builtin\\\">@Autowired</span> <span class=\\\"token keyword\\\">val</span> mockMvc<span class=\\\"token operator\\\">:</span> MockMvc<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token function\\\">FunSpec</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n    <span class=\\\"token annotation builtin\\\">@MockkBean</span>\\n    <span class=\\\"token keyword\\\">private</span> <span class=\\\"token keyword\\\">lateinit</span> <span class=\\\"token keyword\\\">var</span> service<span class=\\\"token operator\\\">:</span> ProposeService\\n\\n    <span class=\\\"token keyword\\\">init</span> <span class=\\\"token punctuation\\\">{</span>\\n        beforeTest <span class=\\\"token punctuation\\\">{</span>\\n            service <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">mockk</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n            every <span class=\\\"token punctuation\\\">{</span> service<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createFundingProposal</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">any</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">}</span> returns <span class=\\\"token function\\\">FundingProposal</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1L</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서 제목\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n            every <span class=\\\"token punctuation\\\">{</span> service<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">updateFundingProposal</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">any</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token function\\\">any</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">}</span> returns <span class=\\\"token function\\\">FundingProposal</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1L</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"새로운 제안서 제목\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서 생성\\\"</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">val</span> expectedId <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1L</span>\\n            <span class=\\\"token keyword\\\">val</span> expectedTitle <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서 제목\\\"</span></span>\\n\\n            mockMvc<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">perform</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">post</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"/fundMng/proposal/create\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">content</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서 제목\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">contentType</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"text/plain\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">andExpect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">status</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>isOk<span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">andExpect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">jsonPath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"$.id\\\"</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">value</span><span class=\\\"token punctuation\\\">(</span>expectedId<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">andExpect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">jsonPath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"$.title\\\"</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">value</span><span class=\\\"token punctuation\\\">(</span>expectedTitle<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"제안서 수정\\\"</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">val</span> proposalId <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span>\\n            <span class=\\\"token keyword\\\">val</span> newTitle <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"새로운 제안서 제목\\\"</span></span>\\n            <span class=\\\"token keyword\\\">val</span> expectedId <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1L</span>\\n            <span class=\\\"token keyword\\\">val</span> expectedTitle <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"새로운 제안서 제목\\\"</span></span>\\n\\n            mockMvc<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">perform</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">put</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"/fundMng/proposal/1\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">content</span><span class=\\\"token punctuation\\\">(</span>newTitle<span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">contentType</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"text/plain\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">andExpect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">status</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>isOk<span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">andExpect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">jsonPath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"$.id\\\"</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">value</span><span class=\\\"token punctuation\\\">(</span>expectedId<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">andExpect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">jsonPath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"$.title\\\"</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">value</span><span class=\\\"token punctuation\\\">(</span>expectedTitle<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React, { useCallback, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface ImageProps {\n  src: string;\n  caption?: string;\n  width?: number;\n  expandable?: boolean;\n}\n\nconst Image = ({ src, caption, width, expandable }: ImageProps) => {\n  const [isExpanded, toggleExpanded] = useState(false);\n\n  return (\n    <figure>\n      <img\n        src={src}\n        width={width}\n        style={{ cursor: expandable ? 'zoom-in' : 'default' }}\n        onClick={expandable ? () => toggleExpanded(true) : undefined}\n      />\n      {caption && <figcaption dangerouslySetInnerHTML={{ __html: caption }} />}\n      {isExpanded &&\n        ReactDOM.createPortal(\n          <div\n            style={{\n              position: 'fixed',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              cursor: 'zoom-out',\n              backgroundColor: 'rgba(0, 0, 0, 0.7)'\n            }}\n            onClick={() => toggleExpanded(false)}\n          >\n            <div\n              style={{\n                borderRadius: 8,\n                maxWidth: 1200,\n                width: '80%',\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: 'white'\n              }}\n            >\n              <img src={src} width=\"100%\" />\n            </div>\n          </div>,\n          document.body\n        )}\n    </figure>\n  );\n};\n\nexport default Image;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","a","p","span","_provideComponents","components","React","id","href","dangerouslySetInnerHTML","__html","Image","src","rel","wrapper","MDXLayout","_ref","caption","width","expandable","isExpanded","toggleExpanded","useState","___EmotionJSX","style","cursor","onClick","undefined","ReactDOM","position","top","left","height","backgroundColor","borderRadius","maxWidth","transform","document","body","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}
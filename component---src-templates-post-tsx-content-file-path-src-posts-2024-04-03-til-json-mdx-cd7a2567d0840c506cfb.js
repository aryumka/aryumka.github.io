"use strict";(self.webpackChunkaryumka_me=self.webpackChunkaryumka_me||[]).push([[2661],{6520:function(e,t,n){n.r(t);var a=n(9128),s=n(9474);function l(e){const t=Object.assign({p:"p",span:"span",ul:"ul",li:"li",a:"a"},(0,a.R)(),e.components);return s.createElement(s.Fragment,null,s.createElement(t.p,null,"시스템끼리 통신할 때(특히 web 기반) ",s.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">JSON</code>'}})," 포맷을 사용한다."),"\n",s.createElement(t.p,null,"이 때 발신하는 측에서 직렬화",s.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">stringify</code>'}}),"가 발생하고 수신하는 측에서는 역직렬화",s.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">parse</code>'}}),"가 필요하다.\n데이터를 수신하는 측에서 JSON을 다시 객체로 사용하기 위해 ",s.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">parse</code>'}}),"하게 되는데 이 때 유효하지 않은 문자가 포함된 경우 parsing error가 발생한다."),"\n",s.createElement(t.p,null,"따라서 데이터의 json에서 유효하지 않은 문자열을",s.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">validation</code>'}}),", ",s.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">normalization</code>'}})," 등 후처리 작업을 통해 처리해주어야 한다."),"\n",s.createElement(t.p,null,"JSON에서 parsing 오류가 발생하는 경우는 다음과 같은 경우들이 대표적이다."),"\n",s.createElement(t.ul,null,"\n",s.createElement(t.li,null,"JSON 문법에 맞지 않는 경우"),"\n",s.createElement(t.li,null,"인코딩 이슈"),"\n",s.createElement(t.li,null,'유효하지 않은 문자열이 포함된 경우 - 키와 밸류를 둘러싼 따옴표를 제외한 따옴표(")나 제어문자 등 출력문자가 아닌 문자 등\n',s.createElement(t.a,{href:"https://www.geeksforgeeks.org/what-is-json-parsing-error-invalid-character/",rel:"nofollow noopener noreferrer"},"출처: geeksforgeeks")),"\n"),"\n",s.createElement(t.p,null,"만약 JSON 문법에 맞지 않거나 인코딩 이슈가 발생하는 등 데이터 역직렬화에 심각한 지장이 있는 경우 ",s.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">validation</code>'}}),"을 통해 예외를 리턴하는 것이 더 적절할 수 있지만 일부 문자열만 제거해주면 데이터 표현이 가능한 경우 ",s.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">normalization</code>'}}),"을 통해 문자열을 직접 수정해주는 것도 좋은 방법일 수 있다."),"\n",s.createElement(t.p,null,"제어문자는 아래 유니코드 표에서 U+0000부터 U+001F까지, U+007F부터 U+009F까지를 포함한다.\n",s.createElement(t.a,{href:"https://en.wikipedia.org/wiki/List_of_Unicode_characters#Control_codes",rel:"nofollow noopener noreferrer"},"유니코드표 - 제어문자")),"\n",s.createElement(t.p,null,"자바에서는 간단하게 ",s.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">p{Cntrl}</code>'}}),"와 같은 정규식으로 제어문자 체크가 가능하다."),"\n",s.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="java"><pre class="language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">getValidJsonString</span><span class="token punctuation">(</span><span class="token class-name">String</span> jsonString<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t<span class="token comment">//\\p{Cntrl} : 제어문자, \\" : 큰따옴표</span>\n\t<span class="token keyword">return</span> jsonString<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">"[\\\\p{Cntrl}\\"]"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",s.createElement(t.p,null,"그러나 위와 같이 표현할 경우 개행문자(\\n)나 캐리지리턴(\\r) 같은 문자들이 모두 삭제되므로 주의해야 한다."))}t.default=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.R)(),e.components);return t?s.createElement(t,e,s.createElement(l,e)):l(e)}},5169:function(e,t,n){n.r(t),n.d(t,{default:function(){return E}});var a=n(6520),s=n(5530),l=n(9474),o=n(8844),r=n(1047),c=n(8928),i=n.n(c),p=n(3893),u=n(2887),m=n(5909),g=n(589),d=n(5181),f=n.n(d),h=n(2195),k=n(6810);i().extend(n(1997));const y=e=>{let{data:t,location:n,pageContext:a,children:s}=e;const{tableOfContents:c,fields:d,frontmatter:y,excerpt:E}=t.mdx,{series:S}=a,x=i()(d.date).locale("ko").format(),v={headline:y.title,dateModified:x,datePublished:x,image:""+n.href+y.image,mainEntityOfPage:{"@type":"WebPage","@id":n.href},author:{"@type":"Person",name:"Lee Sun-Hyoup"},url:n.href,description:E,"@type":"BlogPosting","@context":"https://schema.org"};(0,l.useEffect)((()=>{void 0!==typeof document&&f()((function(){f()(".post-container a[data-footnote-ref]").each(((e,t)=>{var n;const a=null===(n=f()(t).attr("href"))||void 0===n?void 0:n.slice(1),s=f()("#"+a).text().replace("↩","");f()(t).attr("data-tooltip",s)}))}))}),[]);const{0:w,1:L}=(0,l.useState)();(0,l.useEffect)((()=>{L(t.allMdx.edges.filter((e=>e.node.fields.slug!==d.slug)).sort((()=>Math.random()-.5)).slice(0,6))}),[]);const b=y.draft&&!0;return(0,k.Y)(o.A,null,(0,k.Y)(r.A,{title:y.title,description:E,meta:[{name:"article:published_time",content:i()(d.date).locale("ko").format()},{name:"image",content:"https://aryumka.me"+y.image},{property:"og:image",content:"https://aryumka.me"+y.image},{property:"og:image:secure_url",content:"https://aryumka.me"+y.image}]}),(0,k.Y)(g.m,null,(0,k.Y)("script",{type:"application/ld+json"},JSON.stringify(v))),(0,k.Y)("h1",{className:"post-title"},y.title),(0,k.Y)("span",{className:"post-date"},"Written on ",i()(d.date).locale("en").format("LL")),(0,k.Y)("img",{src:y.image,style:{objectFit:"cover",maxHeight:300,width:"100%"}}),b||c.items&&(0,k.Y)(m.A,{items:c.items}),b||(null==S?void 0:S.items)&&(0,k.Y)(h.A,{title:S.title,items:S.items,currentItem:y.title}),(0,k.Y)("div",{className:"post-content"},b?(0,k.Y)(_,null,"Not yet published"):s),(0,k.Y)(p.A,{tags:y.tags,comment:y.comments}),w&&(0,k.Y)(u.A,{posts:w,current:d.slug}))};function E(e){return l.createElement(y,e,l.createElement(a.default,e))}const _=(0,s.A)("div",{target:"ezegrm70"})({name:"xl5zip",styles:"margin:16px 0;font-weight:bold;font-size:20px;text-align:center"})}}]);
//# sourceMappingURL=component---src-templates-post-tsx-content-file-path-src-posts-2024-04-03-til-json-mdx-cd7a2567d0840c506cfb.js.map
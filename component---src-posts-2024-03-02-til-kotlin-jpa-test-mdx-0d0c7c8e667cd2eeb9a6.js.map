{"version":3,"file":"component---src-posts-2024-03-02-til-kotlin-jpa-test-mdx-0d0c7c8e667cd2eeb9a6.js","mappings":"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","sources":["webpack://aryumka.me/./src/posts/2024-03-02-til-kotlin-jpa-test.mdx","webpack://aryumka.me/./src/components/Image/index.tsx","webpack://aryumka.me/./node_modules/.pnpm/@mdx-js+react@3.0.1_@types+react@18.2.79_react@18.2.0/node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Image from '@components/Image';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    span: \"span\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, {\n    id: \"1-kotlin의-data-class는-jpa에서-사용하지-않는다\"\n  }, React.createElement(_components.a, {\n    href: \"#1-kotlin의-data-class는-jpa에서-사용하지-않는다\"\n  }, \"1. Kotlin의 data class는 JPA에서 사용하지 않는다\")), \"\\n\", React.createElement(_components.p, null, \"영속성 계층의 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Entity</code>\"\n    }\n  }), \"가 되려면 아래를 포함한 조건이 갖춰져야 한다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"non-final 최상위 클래스이거나 정적 이너클래스일 것\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"public 또는 protected, no-args 생성자를 가질 것\"), \"\\n\", React.createElement(_components.li, null, \"final 메서드나 persistent한 인스턴스 변수를 가지지 않을 것\\n...\\n(이하 생략)\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://jakarta.ee/specifications/persistence/3.2/apidocs/jakarta.persistence/jakarta/persistence/entity\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"출처: javadoc - jakarta.persistence.entity\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">JPA</code>\"\n    }\n  }), \"는 객체의 상태 변경을 기본 전제로 만들어진 패러다임이다.\\n반면 함수형을 지향하는 코틀린에서는 기본 속성이 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">val(read-only)</code>\"\n    }\n  }), \" 즉 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">immutable</code>\"\n    }\n  }), \"인 것을 전제로 한다.\"), \"\\n\", React.createElement(_components.p, null, \"내 경우 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Entity</code>\"\n    }\n  }), \"를 기본 속성이 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">val(read-only)</code>\"\n    }\n  }), \"로 설정되는 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">data class</code>\"\n    }\n  }), \"로 설계했다가 모두 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">var</code>\"\n    }\n  }), \"을 가진 일반 클래스로 바꿔야 했다. 수정자가 추가되며 리턴타입도 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">copy</code>\"\n    }\n  }), \"된 객체를 리턴하던 것이 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">void</code>\"\n    }\n  }), \"로 바뀌었고 테스트도 모두 바꿔야 했다.\"), \"\\n\", React.createElement(_components.p, null, \"이는 \", React.createElement(_components.a, {\n    href: \"https://spring.io/guides/tutorials/spring-boot-kotlin\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"스프링 공식 가이드\"), \"에도 기술된 바이다.\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Spring Data JPA</code>\"\n    }\n  }), \"가 아닌 다른 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Spring Data</code>\"\n    }\n  }), \"의 경우 data class의 사용이 문제되지 않는다고 한다.\"), \"\\n\", React.createElement(Image, {\n    src: \"https://velog.velcdn.com/images/aryumka/post/af776ead-b672-4d57-80bb-fe6fac180764/image.png\"\n  }), \"\\n\", React.createElement(_components.p, null, \"위 가이드의 샘플 코드에서 속성들의 접근제어자는 그냥 디폴트이다. 그래서 나도 따로 private var로 만들지는 않았다. 검색을 해봐도 많은 경우 Entity의 속성을 private으로 따로 지정하지 않는 것 같았다. 조금 의아하지만 일단 공식문서에 기술된 대로 따라보기로 했다.\"), \"\\n\", React.createElement(_components.p, null, \"그리고 그래들 플러그인을 다음과 같이 추가해주었다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"kotlin\\\"><pre class=\\\"language-kotlin\\\"><code class=\\\"language-kotlin\\\">plugins <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">kotlin</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"plugin.allopen\\\"</span></span><span class=\\\"token punctuation\\\">)</span> version <span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"1.9.22\\\"</span></span>\\n  <span class=\\\"token function\\\">kotlin</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"plugin.noarg\\\"</span></span><span class=\\\"token punctuation\\\">)</span> version <span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"1.9.22\\\"</span></span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nallOpen <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">annotation</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"jakarta.persistence.Entity\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">annotation</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"jakarta.persistence.Embeddable\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">annotation</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"jakarta.persistence.MappedSuperclass\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"매 엔티티 클래스마다 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">open</code>\"\n    }\n  }), \"을 선언해주거나 no-arg 생성자를 만들지 않아도 영속성 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Entity</code>\"\n    }\n  }), \"가 될 수 있도록 해준다.\"), \"\\n\", React.createElement(Image, {\n    src: \"https://velog.velcdn.com/images/aryumka/post/d01091b3-9e97-4b7f-872e-34a63f9fbbdb/image.png\"\n  }), \"\\n\", React.createElement(_components.p, null, \"별도로 지정해주지 않아도 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">open class</code>\"\n    }\n  }), \"로 바뀌어있다\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">data class</code>\"\n    }\n  }), \"일 때는 자동으로 만들어줬던 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">hashcode</code>\"\n    }\n  }), \"와 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">equals</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">toString</code>\"\n    }\n  }), \"은 직접 구현해줘야 했다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"2-key-generation\"\n  }, React.createElement(_components.a, {\n    href: \"#2-key-generation\"\n  }, \"2. Key Generation?\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">insert</code>\"\n    }\n  }), \" 하기 전에 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">select</code>\"\n    }\n  }), \"가 실행되지만 실제 쿼리가 실행되는 건 아니다.\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">insert</code>\"\n    }\n  }), \" 후 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">select</code>\"\n    }\n  }), \"를 실행하면 영속성 계층에 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">select</code>\"\n    }\n  }), \"하는 대상의 id를 가진 객체가 있는지 먼저 탐색한다고 한다.\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">GenerationType.SEQUENCE</code>\"\n    }\n  }), \" 전략으로 키를 생성하기로 했다.\\n하지만 매번 키 탐색을 위해 DB를 다녀오는게 이상하다. 기본적으로 50개가 할당된다고 들었는데.\"), \"\\n\", React.createElement(_components.p, null, \"그런데 키 생성전략을 위해서는 이렇게 DB를 이용하는게 최선일까?\\n좋은 방법이 있을 것 같은데.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"3-h2-db와-테스트-환경\"\n  }, React.createElement(_components.a, {\n    href: \"#3-h2-db와-테스트-환경\"\n  }, \"3. H2 DB와 테스트 환경\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">H2 db</code>\"\n    }\n  }), \"로 테스트하면 매 테스트마다 롤백이 된다고 한다. 즉 실제 DB에 들어가지 않는다는 말이다.\\n테스트마다 아이디를 일부러 중복으로 넣어도 무결성 에러도 나지 않고 디버깅으로 멈춰 놓고 콘솔에 접속해도 아무것도 없어서 어리둥절했다.\\n그럼 DB가 초기화될 때 DDL도 실행되지 않는 것인가..?\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React, { useCallback, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface ImageProps {\n  src: string;\n  caption?: string;\n  width?: number;\n  expandable?: boolean;\n}\n\nconst Image = ({ src, caption, width, expandable }: ImageProps) => {\n  const [isExpanded, toggleExpanded] = useState(false);\n\n  return (\n    <figure>\n      <img\n        src={src}\n        width={width}\n        style={{ cursor: expandable ? 'zoom-in' : 'default' }}\n        onClick={expandable ? () => toggleExpanded(true) : undefined}\n      />\n      {caption && <figcaption dangerouslySetInnerHTML={{ __html: caption }} />}\n      {isExpanded &&\n        ReactDOM.createPortal(\n          <div\n            style={{\n              position: 'fixed',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              cursor: 'zoom-out',\n              backgroundColor: 'rgba(0, 0, 0, 0.7)'\n            }}\n            onClick={() => toggleExpanded(false)}\n          >\n            <div\n              style={{\n                borderRadius: 8,\n                maxWidth: 1200,\n                width: '80%',\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: 'white'\n              }}\n            >\n              <img src={src} width=\"100%\" />\n            </div>\n          </div>,\n          document.body\n        )}\n    </figure>\n  );\n};\n\nexport default Image;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","a","p","span","blockquote","ul","li","_provideComponents","components","React","id","href","dangerouslySetInnerHTML","__html","rel","Image","src","wrapper","MDXLayout","_ref","caption","width","expandable","isExpanded","toggleExpanded","useState","___EmotionJSX","style","cursor","onClick","undefined","ReactDOM","position","top","left","height","backgroundColor","borderRadius","maxWidth","transform","document","body","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}
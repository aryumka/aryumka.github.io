{"version":3,"file":"component---src-posts-2024-03-03-functional-exception-mdx-9613ed4fbfb2e9043bb6.js","mappings":"gLAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,KAAM,SACLC,EAAAA,EAAAA,KAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,gBAAiB,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CACrJI,wBAAyB,CACvBC,OAAQ,0mGAER,KAAMF,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,iDAAkD,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CAC/II,wBAAyB,CACvBC,OAAQ,yzCAGd,CAKA,UAJA,SAAoBV,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,KAAsBN,EAAMO,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWZ,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,C,qECMA,MAAMa,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBR,GAC/B,MAAMS,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfP,EACFA,EAAWS,GAGb,IAAIA,KAAsBT,EACnC,GACA,CAACS,EAAmBT,GAExB,C","sources":["webpack://aryumka.me/./src/posts/2024-03-03-functional-exception.mdx","webpack://aryumka.me/./node_modules/.pnpm/@mdx-js+react@3.0.1_@types+react@18.2.79_react@18.2.0/node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"이런 유틸을 만들어놓고\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"kotlin\\\"><pre class=\\\"language-kotlin\\\"><code class=\\\"language-kotlin\\\"><span class=\\\"token keyword\\\">fun</span> <span class=\\\"token operator\\\">&lt;</span>T<span class=\\\"token operator\\\">></span> T<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">throwIfNull</span><span class=\\\"token punctuation\\\">(</span>throwable<span class=\\\"token operator\\\">:</span> Throwable<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> T <span class=\\\"token operator\\\">=</span>\\n  <span class=\\\"token keyword\\\">this</span> <span class=\\\"token operator\\\">?:</span> <span class=\\\"token keyword\\\">throw</span> throwable\\n\\n<span class=\\\"token keyword\\\">inline</span> <span class=\\\"token keyword\\\">fun</span> <span class=\\\"token operator\\\">&lt;</span>T<span class=\\\"token operator\\\">></span> T<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">throwIf</span><span class=\\\"token punctuation\\\">(</span>throwable<span class=\\\"token operator\\\">:</span> Throwable<span class=\\\"token punctuation\\\">,</span> predicate<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span>T<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">-></span> Boolean<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> T <span class=\\\"token operator\\\">=</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">predicate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throw</span> throwable <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">this</span>\\n\\n<span class=\\\"token keyword\\\">fun</span> <span class=\\\"token operator\\\">&lt;</span>T<span class=\\\"token operator\\\">></span> T<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">defaultIfNull</span><span class=\\\"token punctuation\\\">(</span>default<span class=\\\"token operator\\\">:</span> T<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> T <span class=\\\"token operator\\\">=</span>\\n  <span class=\\\"token keyword\\\">this</span> <span class=\\\"token operator\\\">?:</span> default\\n\\n<span class=\\\"token keyword\\\">inline</span> <span class=\\\"token keyword\\\">fun</span> <span class=\\\"token operator\\\">&lt;</span>T<span class=\\\"token operator\\\">></span> T<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">defaultIfNull</span><span class=\\\"token punctuation\\\">(</span>block<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">-></span> T<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> T <span class=\\\"token operator\\\">=</span>\\n  <span class=\\\"token keyword\\\">this</span> <span class=\\\"token operator\\\">?:</span> <span class=\\\"token function\\\">block</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"이렇게 사용하면 코드를 위에서부터 아래로 차례로 읽을 수 있어 가독성이 올라간다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"kotlin\\\"><pre class=\\\"language-kotlin\\\"><code class=\\\"language-kotlin\\\"><span class=\\\"token keyword\\\">fun</span> <span class=\\\"token function\\\">getMember</span><span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token operator\\\">:</span> MemberId<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> MemberDTO <span class=\\\"token operator\\\">=</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>memberRepository\\n    <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">findById</span><span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">throwIfNull</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">MemberNotFoundException</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-literal singleline\\\"><span class=\\\"token string\\\">\\\"멤버를 찾을 수 없습니다.\\\"</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">let</span><span class=\\\"token punctuation\\\">(</span>MemberDTO<span class=\\\"token operator\\\">::</span>from<span class=\\\"token punctuation\\\">)</span> </code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}
"use strict";(self.webpackChunkaryumka_me=self.webpackChunkaryumka_me||[]).push([[1482,3284,4164,4646,4926,6638,7824,8e3,8995],{99:function(n,a,s){var t=s(9474),e=s(1615),o=s(3543);a.A=n=>{let{src:a,caption:s,width:p,expandable:c}=n;const{0:l,1:i}=(0,t.useState)(!1);return(0,o.Y)("figure",null,(0,o.Y)("img",{src:a,width:p,style:{cursor:c?"zoom-in":"default"},onClick:c?()=>i(!0):void 0}),s&&(0,o.Y)("figcaption",{dangerouslySetInnerHTML:{__html:s}}),l&&e.createPortal((0,o.Y)("div",{style:{position:"fixed",top:0,left:0,width:"100%",height:"100%",cursor:"zoom-out",backgroundColor:"rgba(0, 0, 0, 0.7)"},onClick:()=>i(!1)},(0,o.Y)("div",{style:{borderRadius:8,maxWidth:1200,width:"80%",position:"fixed",top:"50%",left:"50%",transform:"translate(-50%, -50%)",backgroundColor:"white"}},(0,o.Y)("img",{src:a,width:"100%"}))),document.body))}},7028:function(n,a,s){s.r(a);var t=s(9128),e=s(9474),o=s(99);function p(n){const a=Object.assign({p:"p",span:"span"},(0,t.R)(),n.components);return e.createElement(e.Fragment,null,e.createElement(a.p,null,"In-memory service나 mock 없이 통합 테스트 환경에서 Docker 이미지 기반으로 DB, 메시지 브로커, 검색엔진 등의 테스트 인프라를 간단하게 구성할 수 있다."),"\n",e.createElement(a.p,null,"특히 클라우드 환경의 MSA에서 유용하다."),"\n",e.createElement(o.A,{src:"https://velog.velcdn.com/images/aryumka/post/9fcbd346-bd6e-4097-bce9-b7c9468b5cfc/image.png"}),"\n",e.createElement(a.p,null,"JUnit을 이용한 테스트에서는 아래와 같이 사용한다."),"\n",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="kotlin"><pre class="language-kotlin"><code class="language-kotlin">testImplementation <span class="token string-literal singleline"><span class="token string">"org.junit.jupiter:junit-jupiter:5.8.1"</span></span>\ntestImplementation <span class="token string-literal singleline"><span class="token string">"org.testcontainers:testcontainers:1.19.7"</span></span>\ntestImplementation <span class="token string-literal singleline"><span class="token string">"org.testcontainers:junit-jupiter:1.19.7"</span></span></code></pre></div>'}}),"\n",e.createElement(a.p,null,"의존성을 설정하고"),"\n",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="java"><pre class="language-java"><code class="language-java"><span class="token annotation punctuation">@Testcontainers</span>\n<span class="token keyword">class</span> <span class="token class-name">TokenReplayIntegrationTest</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Container</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">RedpandaContainer</span> <span class="token constant">REDPANDA_CONTAINER</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedpandaContainer</span><span class="token punctuation">(</span>\n            <span class="token string">"docker.redpanda.com/vectorized/redpanda:v22.2.1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre></div>'}}),"\n",e.createElement(a.p,null,"위 처럼 kafka 통합 테스트 환경을 RedPanda를 이용하여 구성할 수도 있고"),"\n",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="java"><pre class="language-java"><code class="language-java"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token class-name">OracleContainer</span> oracleContainer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OracleContainer</span><span class="token punctuation">(</span><span class="token string">"gvenzl/oracle-xe:21-slim-faststart"</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">withDatabaseName</span><span class="token punctuation">(</span><span class="token string">"testDB"</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">withUsername</span><span class="token punctuation">(</span><span class="token string">"testUser"</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">withPassword</span><span class="token punctuation">(</span><span class="token string">"testPassword"</span><span class="token punctuation">)</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre></div>'}}),"\n",e.createElement(a.p,null,"위 처럼 DB 통합 테스트 환경을 구성할 수도 있다."))}a.default=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,t.R)(),n.components);return a?e.createElement(a,n,e.createElement(p,n)):p(n)}},9128:function(n,a,s){s.d(a,{R:function(){return p}});var t=s(9474);const e={},o=t.createContext(e);function p(n){const a=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(a):{...a,...n}}),[a,n])}}}]);
//# sourceMappingURL=component---src-posts-2024-05-04-til-test-container-mdx-30c82c993e1e0e813c7b.js.map